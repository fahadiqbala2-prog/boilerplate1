{"version":3,"file":"OrderConfirmation.js","sources":["../../../ElsieSDK/packages/elsie/src/lib/form-values.ts","../../src/reducers/orderConfirmation.ts","../../src/hooks/useBreakpoint/useBreakpoint.ts","../../src/components/OrderConfirmation/OrderConfirmation.tsx","../../../ElsieSDK/packages/elsie/src/icons/Close.svg","../../../ElsieSDK/packages/elsie/src/icons/OrderSuccess.svg","../../../ElsieSDK/packages/elsie/src/icons/CheckWithCircle.svg","../../../ElsieSDK/packages/elsie/src/icons/WarningFilled.svg","../../src/components/Header/Header.tsx","../../src/components/Header/HeaderSkeleton.tsx","../../src/components/InLineAlert/InLineAlert.tsx","../../src/components/OrderSearchForm/OrderSearchForm.tsx","../../src/components/Details/Details.tsx","../../src/components/Details/DetailsSkeleton.tsx","../../src/components/Footer/Footer.tsx","../../src/components/Footer/FooterSkeleton.tsx","../../src/components/StaticSkeleton/StaticSkeleton.tsx","../../src/components/OrderSummary/OrderSummary.tsx","../../src/components/OrderSummary/OrderSummarySkeleton.tsx","../../src/components/CartSummaryItem/CartSummaryItem.tsx","../../src/data/transforms/transform-order-items.ts","../../src/components/CartSummary/CartSummary.tsx","../../../ElsieSDK/packages/elsie/src/components/CartItem/CartItemSkeleton.tsx","../../src/components/CartSummary/CartSummarySkeleton.tsx","../../src/containers/OrderConfirmation/OrderConfirmation.tsx"],"sourcesContent":["export const getFormValues = (form: HTMLFormElement) => {\n  const formData: any = new FormData(form);\n  const result = Object.fromEntries(formData);\n  return result;\n};\n\nexport const getFormErrors = (form: HTMLFormElement) => {\n  const formData: any = new FormData(form);\n\n  const data = Object.fromEntries(formData);\n\n  const result = Object.entries(data).reduce((result, [key]) => {\n    // @ts-ignore\n    const field = form.elements[key];\n\n    return field?.validationMessage\n      ? { ...result, [key]: field.validationMessage }\n      : { ...result };\n  }, {});\n\n  return result;\n};\n","import {\n  GuestOrderByTokenQuery,\n  GuestOrderQuery,\n} from '@/order-confirmation/__generated__/types';\n\nexport enum Actions {\n  ADD_ORDER_REFERENCE = 'ADD_ORDER_REFERENCE',\n  LOADING = 'LOADING',\n  SET_DETAILS = 'SET_DETAILS',\n  ALERT = 'ALERT',\n  DISMISS_ALERT = 'DISMISS_ALERT',\n}\n\nexport type OrderDetails =\n  | GuestOrderQuery['guestOrder']\n  | GuestOrderByTokenQuery['guestOrderByToken'];\n\ninterface LoadingAction {\n  type: Actions.LOADING;\n}\n\ninterface SetDetailsAction {\n  type: Actions.SET_DETAILS;\n  details: OrderDetails | null;\n  alert?: Alert;\n}\n\nexport enum AlertType {\n  ERROR = 'error',\n  WARNING = 'warning',\n  SUCCESS = 'success',\n}\n\nexport enum AlertCode {\n  INVALID_ORDER = 'invalid_order',\n  INVALID_SEARCH = 'invalid_search',\n  UNKNOWN = 'unknown_error',\n}\n\nexport type Alert = {\n  type: AlertType;\n  code: AlertCode;\n  message: string;\n};\n\ninterface AlertAction {\n  type: Actions.ALERT;\n  alert: Alert;\n}\n\ninterface DismissAlertAction {\n  type: Actions.DISMISS_ALERT;\n}\n\nexport interface State {\n  isLoading: boolean;\n  details: OrderDetails | null;\n  token?: string;\n  alert?: Alert;\n}\n\ntype Action =\n  | LoadingAction\n  | SetDetailsAction\n  | AlertAction\n  | DismissAlertAction;\n\nexport function orderConfirmationReducer(state: State, action: Action): State {\n  switch (action.type) {\n    case Actions.LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case Actions.SET_DETAILS:\n      return {\n        ...state,\n        isLoading: false,\n        details: action.details,\n        alert: action.alert,\n      };\n    case Actions.ALERT:\n      return {\n        ...state,\n        isLoading: false,\n        alert: action.alert,\n      };\n    case Actions.DISMISS_ALERT:\n      return {\n        ...state,\n        alert: undefined,\n      };\n    default:\n      return state;\n  }\n}\n","import { useEffect, useState } from 'preact/hooks';\n\nexport const useBreakpoint = () => {\n  const getBreakpoint = () => {\n    if (window.innerWidth >= 1920) return 'xxlarge';\n    if (window.innerWidth >= 1366) return 'xlarge';\n    if (window.innerWidth >= 1024) return 'large';\n    if (window.innerWidth >= 768) return 'medium';\n\n    return 'small';\n  };\n\n  const [breakpoint, setBreakpoint] = useState<\n    ReturnType<typeof getBreakpoint>\n  >(getBreakpoint());\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>;\n\n    const handleResize = () => {\n      if (timeoutId) clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => setBreakpoint(getBreakpoint()), 50);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (timeoutId) clearTimeout(timeoutId);\n    };\n  }, []);\n\n  return breakpoint;\n};\n","import { HTMLAttributes } from 'preact/compat';\nimport { FunctionComponent, VNode } from 'preact';\nimport { classes } from '@adobe/elsie/lib';\nimport '@/order-confirmation/components/OrderConfirmation/OrderConfirmation.css';\nimport {\n  CartSummary,\n  Details,\n  Footer,\n  Header,\n  OrderSearchFields,\n  OrderSearchForm,\n  OrderSummary,\n  Summary,\n} from '@/order-confirmation/components';\nimport {\n  AlertCode,\n  State,\n} from '@/order-confirmation/reducers/orderConfirmation';\nimport { useBreakpoint } from '@/order-confirmation/hooks/useBreakpoint';\n\nconst ConditionalWrapper: FunctionComponent<{\n  children?: VNode;\n  className: string;\n}> = ({ children, className }) => {\n  const breakpoint = useBreakpoint();\n  return breakpoint !== 'small' ? (\n    <div className={className}>{children}</div>\n  ) : (\n    <>{children}</>\n  );\n};\n\nexport interface OrderConfirmationProps extends HTMLAttributes<HTMLDivElement> {\n  state: State;\n  dismissAlert: () => void;\n  onOrderSearch: (fields: OrderSearchFields) => void;\n  routeHome?: () => string;\n  routeSupport?: () => string;\n}\n\n// TODO types\nfunction mapDetailsToSummary(orderDetails: any): Summary | undefined {\n  const total = orderDetails?.total;\n\n  if (!total) {\n    return undefined;\n  }\n\n  const grandTotal = total?.grand_total;\n  const subtotal = total?.subtotal;\n  const shipping = total?.total_shipping;\n  const tax = total?.total_tax;\n\n  return {\n    total: {\n      inclTax: {\n        amount: grandTotal?.value || 0,\n        currency: grandTotal?.currency || '',\n      },\n    },\n    subtotal: {\n      amount: subtotal?.value || 0,\n      currency: subtotal?.currency || '',\n      isTaxIncl: false,\n    },\n    shipping: {\n      amount: shipping?.value || 0,\n      currency: shipping?.currency || '',\n    },\n    tax: {\n      amount: tax?.value || 0,\n      currency: tax?.currency || '',\n    },\n  };\n}\n\ntype AsideProps = {\n  state: State;\n};\n\nconst Aside: FunctionComponent<AsideProps> = ({ state }) => {\n  const { isLoading, details } = state;\n  const summary = mapDetailsToSummary(details);\n\n  return (\n    <>\n      <OrderSummary isLoading={isLoading} summary={summary} />\n      <CartSummary isLoading={isLoading} details={details} />\n    </>\n  );\n};\n\nconst AsideElement: FunctionComponent<AsideProps> = ({ state }) => {\n  return (\n    <ConditionalWrapper className=\"order-confirmation__aside\">\n      <Aside state={state} />\n    </ConditionalWrapper>\n  );\n};\n\nconst Main: FunctionComponent<OrderConfirmationProps> = ({\n  state,\n  routeHome,\n  routeSupport,\n}) => {\n  const { details, isLoading } = state;\n\n  const billingAddress = details?.billing_address;\n  const customerName = billingAddress?.firstname || '';\n  const orderNumber = details?.number || '';\n  const orderStatus = details?.status || '';\n\n  const showCustomerHeader = !!customerName && !!orderNumber;\n\n  return (\n    <>\n      {(isLoading || (!isLoading && showCustomerHeader)) && (\n        <Header\n          isLoading={isLoading}\n          customerName={customerName}\n          orderNumber={orderNumber}\n          orderStatus={orderStatus}\n        />\n      )}\n\n      <Details isLoading={isLoading} orderDetails={details} />\n\n      <Footer\n        isLoading={isLoading}\n        routeHome={routeHome}\n        routeSupport={routeSupport}\n      />\n    </>\n  );\n};\n\nconst MainElement: FunctionComponent<OrderConfirmationProps> = ({\n  state,\n  routeHome,\n  routeSupport,\n  dismissAlert,\n  onOrderSearch,\n}) => {\n  return (\n    <ConditionalWrapper className=\"order-confirmation__main\">\n      <Main\n        state={state}\n        routeHome={routeHome}\n        routeSupport={routeSupport}\n        dismissAlert={dismissAlert}\n        onOrderSearch={onOrderSearch}\n      />\n    </ConditionalWrapper>\n  );\n};\n\nexport const OrderConfirmation: FunctionComponent<OrderConfirmationProps> = ({\n  className,\n  state,\n  dismissAlert,\n  routeHome,\n  routeSupport,\n  onOrderSearch,\n}) => {\n  const { details, alert, isLoading } = state;\n  const hasOrderDetails = !!details?.number;\n  const isInvalidOrder = alert && alert.code === AlertCode.INVALID_ORDER;\n  const isInvalidSearch = alert && alert.code === AlertCode.INVALID_SEARCH;\n\n  if (!isLoading && !hasOrderDetails) {\n    return (\n      <div className={classes(['order-confirmation', className])}>\n        <OrderSearchForm\n          alert={\n            isInvalidOrder || isInvalidSearch\n              ? {\n                  heading: alert.message,\n                  description: '',\n                  type: alert.type,\n                  onDismiss: dismissAlert,\n                }\n              : undefined\n          }\n          onOrderSearch={onOrderSearch}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes(['order-confirmation', className])}>\n      <MainElement\n        state={state}\n        dismissAlert={dismissAlert}\n        routeHome={routeHome}\n        routeSupport={routeSupport}\n        onOrderSearch={onOrderSearch}\n      />\n      <AsideElement state={state} />\n    </div>\n  );\n};\n","import * as React from \"react\";\nconst SvgClose = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M18.3599 5.64001L5.62988 18.37\", stroke: \"currentColor\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M18.3599 18.37L5.62988 5.64001\", stroke: \"currentColor\" }));\nexport default SvgClose;\n","import * as React from \"react\";\nconst SvgOrderSuccess = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { clipPath: \"url(#clip0_4797_15077)\" }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M10.15 20.85L1.5 17.53V6.63L10.15 10V20.85Z\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M1.5 6.63001L10.15 3.20001L18.8 6.63001L10.15 10L1.5 6.63001Z\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M6.17969 4.77002L14.8297 8.15002V11.47\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M18.7896 12.64V6.63L10.1396 10V20.85L14.8296 19.05\", stroke: \"currentColor\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { className: \"success-icon\", vectorEffect: \"non-scaling-stroke\", d: \"M15.71 17.26C15.71 15.38 17.23 13.86 19.11 13.86C20.99 13.86 22.51 15.38 22.51 17.26C22.51 19.14 20.99 20.66 19.11 20.66C17.23 20.66 15.71 19.14 15.71 17.26Z\", stroke: \"currentColor\" }), /* @__PURE__ */ React.createElement(\"path\", { className: \"success-icon\", vectorEffect: \"non-scaling-stroke\", d: \"M17.4805 17.49L18.5605 18.41L20.7205 16.33\", stroke: \"currentColor\", strokeLinecap: \"square\", strokeLinejoin: \"round\" })), /* @__PURE__ */ React.createElement(\"defs\", null, /* @__PURE__ */ React.createElement(\"clipPath\", { id: \"clip0_4797_15077\" }, /* @__PURE__ */ React.createElement(\"rect\", { width: 22, height: 18.65, fill: \"white\", transform: \"translate(1 2.70001)\" }))));\nexport default SvgOrderSuccess;\n","import * as React from \"react\";\nconst SvgCheckWithCircle = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M0.75 12C0.75 5.78421 5.78421 0.75 12 0.75C18.2158 0.75 23.25 5.78421 23.25 12C23.25 18.2158 18.2158 23.25 12 23.25C5.78421 23.25 0.75 18.2158 0.75 12Z\", stroke: \"currentColor\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M6.75 12.762L10.2385 15.75L17.25 9\", stroke: \"currentColor\" }));\nexport default SvgCheckWithCircle;\n","import * as React from \"react\";\nconst SvgWarningFilled = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M1 20.8953L12.1922 1.5L23.395 20.8953H1ZM13.0278 13.9638L13.25 10.0377V9H11.25V10.0377L11.4722 13.9638H13.0278ZM11.2994 16V17.7509H13.2253V16H11.2994Z\", fill: \"currentColor\" }));\nexport default SvgWarningFilled;\n","import { FunctionComponent } from 'preact';\nimport { Icon } from '@adobe/elsie/components';\nimport { OrderSuccess } from '@adobe/elsie/icons';\nimport { Text } from '@adobe/elsie/i18n';\nimport { HeaderSkeleton } from '@/order-confirmation/components';\nimport '@/order-confirmation/components/Header/Header.css';\n\nexport interface HeaderProps {\n  isLoading: boolean;\n  customerName?: string;\n  orderNumber?: string;\n  orderStatus?: string;\n}\nexport const Header: FunctionComponent<HeaderProps> = ({\n  isLoading,\n  customerName,\n  orderNumber,\n  orderStatus,\n}) => {\n  if (isLoading) {\n    return <HeaderSkeleton />;\n  }\n\n  return (\n    <div className={'order-confirmation-header order-confirmation__card'}>\n      <Icon\n        source={OrderSuccess}\n        size=\"64\"\n        className={'order-confirmation-header__icon'}\n      />\n\n      <h1 className={'order-confirmation-header__title'}>\n        {customerName ? (\n          <Text\n            id={'OrderConfirmation.Header.title'}\n            fields={{ name: customerName }}\n          />\n        ) : (\n          <Text id={'OrderConfirmation.Header.defaultTitle'} />\n        )}\n      </h1>\n\n      {orderNumber && (\n        <p>\n          <Text\n            id={'OrderConfirmation.Header.order'}\n            fields={{ order: orderNumber }}\n          />\n          {orderStatus !== undefined && orderStatus !== '' && (\n            <span className={'order-confirmation-header__status'}>\n              {' '}\n              ({orderStatus})\n            </span>\n          )}\n        </p>\n      )}\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const HeaderSkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton\n      data-testid=\"order-confirmation-header-skeleton\"\n      className={'order-confirmation-header'}\n    >\n      <SkeletonRow variant={'empty'} size=\"xlarge\" fullWidth={true} />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow size=\"small\" fullWidth={true} />\n      <SkeletonRow variant={'heading'} size=\"xsmall\" fullWidth={true} />\n    </Skeleton>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport '@/order-confirmation/components/InLineAlert/InLineAlert.css';\nimport { Button, Icon } from '@adobe/elsie/components';\nimport { CheckWithCircle, Close, WarningFilled } from '@adobe/elsie/icons';\n\nexport interface InLineAlertProps extends HTMLAttributes<HTMLDivElement> {\n  heading: string;\n  description: string;\n  type?: 'error' | 'warning' | 'success';\n  additionalActions?: Array<{\n    label: string;\n    onClick: (event: Event) => void;\n  }>;\n  onDismiss: (event: Event) => void;\n}\n\nconst VARIANT_TO_ICON_MAP = {\n  error: WarningFilled,\n  success: CheckWithCircle,\n  warning: WarningFilled,\n};\n\nexport const InLineAlert: FunctionComponent<InLineAlertProps> = ({\n  className,\n  type = 'warning',\n  additionalActions,\n  onDismiss,\n  heading,\n  description,\n  ...props\n}) => {\n  const icon = VARIANT_TO_ICON_MAP[type];\n  const translations = {\n    dismiss: 'OrderConfirmation.InlineAlert.Dismiss',\n  };\n\n  return (\n    <div\n      {...props}\n      className={classes([\n        'dropin-in-line-alert',\n        `dropin-in-line-alert--${type}`,\n        className,\n      ])}\n    >\n      <div className={'dropin-in-line-alert__heading'}>\n        <div className={'dropin-in-line-alert__title-container'}>\n          {icon && (\n            <Icon source={icon} className={'dropin-in-line-alert__icon'} />\n          )}\n\n          <span className={'dropin-in-line-alert__title'}>{heading}</span>\n        </div>\n\n        <div className={'dropin-in-line-alert__actions-container'}>\n          {additionalActions?.length == 1 && (\n            <Button\n              variant=\"tertiary\"\n              className={'dropin-in-line-alert__additional-action'}\n              onClick={additionalActions[0]?.onClick}\n              aria-label={additionalActions[0]?.label}\n            >\n              {additionalActions[0]?.label}\n            </Button>\n          )}\n          {onDismiss && (\n            <Button\n              icon={<Icon source={Close} size=\"24\" stroke=\"2\" />}\n              className={'dropin-in-line-alert__dismiss-button'}\n              variant=\"tertiary\"\n              onClick={onDismiss}\n              aria-label={translations.dismiss}\n            />\n          )}\n        </div>\n      </div>\n\n      {description && (\n        <p className={'dropin-in-line-alert__description'}>{description}</p>\n      )}\n\n      {additionalActions && additionalActions?.length > 1 && (\n        <div className={'dropin-in-line-alert__additional-actions-container'}>\n          {additionalActions.map((action) => (\n            <Button\n              key={action.label}\n              variant=\"tertiary\"\n              className={'dropin-in-line-alert__additional-action'}\n              onClick={action.onClick}\n            >\n              {action.label}\n            </Button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport '@/order-confirmation/components/OrderSearchForm/OrderSearchForm.css';\nimport { Button, Card, Field, Input } from '@adobe/elsie/components';\nimport { Text, useText } from '@adobe/elsie/i18n';\nimport { getFormValues } from '@adobe/elsie/lib';\nimport {\n  InLineAlert,\n  InLineAlertProps,\n} from '@/order-confirmation/components/InLineAlert';\n\nexport interface OrderSearchFields {\n  email: string;\n  number: string;\n  postcode?: string;\n}\n\nexport interface OrderSearchFormProps extends HTMLAttributes<HTMLDivElement> {\n  alert?: InLineAlertProps;\n  onOrderSearch?: (fields: OrderSearchFields) => void;\n}\n\nexport const OrderSearchForm: FunctionComponent<OrderSearchFormProps> = ({\n  alert,\n  onOrderSearch,\n}) => {\n  const translations = useText({\n    email: 'OrderConfirmation.OrderSearchForm.email',\n    postcode: 'OrderConfirmation.OrderSearchForm.postcode',\n    number: 'OrderConfirmation.OrderSearchForm.orderNumber',\n  });\n\n  const handleSubmit = (event: Event) => {\n    event.preventDefault();\n    const formValues = getFormValues(event.target as HTMLFormElement);\n    onOrderSearch?.(formValues as OrderSearchFields);\n  };\n\n  return (\n    <Card\n      variant={'secondary'}\n      className={\n        'order-confirmation-order-search-form order-confirmation__card'\n      }\n    >\n      <h2 className={'order-confirmation-order-search-form__title'}>\n        <Text id={'OrderConfirmation.OrderSearchForm.title'} />\n      </h2>\n\n      <p>\n        <Text id={'OrderConfirmation.OrderSearchForm.description'} />\n      </p>\n\n      {alert && (\n        <InLineAlert\n          className={'order-confirmation-order-search-form__alert'}\n          data-testid='order-confirmation-alert'\n          {...alert}\n        />\n      )}\n\n      <form\n        className={'order-confirmation-order-search-form__fields'}\n        onSubmit={handleSubmit}\n      >\n        <div className={'order-confirmation-order-search-form__fields-columns'}>\n          <Field>\n            <Input\n              id=\"order-email\"\n              name=\"email\"\n              type={'email'}\n              autocomplete={'email'}\n              placeholder={translations.email}\n              floatingLabel={translations.email}\n              required={true}\n              aria-label={translations.email}\n              aria-required={true}\n            />\n          </Field>\n\n          <Field>\n            <Input\n              id=\"postcode\"\n              name=\"postcode\"\n              type={'text'}\n              autocomplete={'postal-code'}\n              placeholder={translations.postcode}\n              floatingLabel={translations.postcode}\n              required={false}\n              aria-label={translations.postcode}\n              aria-required={true}\n            />\n          </Field>\n        </div>\n\n        <Field>\n          <Input\n            id=\"order-number\"\n            name=\"number\"\n            type={'text'}\n            placeholder={translations.number}\n            floatingLabel={translations.number}\n            required={true}\n            aria-label={translations.number}\n            aria-required={true}\n          />\n        </Field>\n\n        <Button\n          className={'order-confirmation-order-search-form__button'}\n          size={'medium'}\n          variant={'primary'}\n          key={'logIn'}\n          type={'submit'}\n        >\n          <Text id={'OrderConfirmation.OrderSearchForm.button'} />\n        </Button>\n      </form>\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport '@/order-confirmation/components/Details/Details.css';\nimport { Price, Card } from '@adobe/elsie/components';\nimport { Text } from '@adobe/elsie/i18n';\nimport { OrderDetails } from '@/order-confirmation/reducers/orderConfirmation';\nimport {\n  StaticSkeleton,\n  DetailsSkeleton,\n} from '@/order-confirmation/components';\n\nexport interface DetailsProps extends HTMLAttributes<HTMLDivElement> {\n  isLoading: boolean;\n  orderDetails: OrderDetails | null;\n}\n\nexport const Details: FunctionComponent<DetailsProps> = ({\n  isLoading,\n  orderDetails,\n}) => {\n  if (isLoading) {\n    return <DetailsSkeleton />;\n  }\n\n  const hasOrderDetails = orderDetails && orderDetails?.number;\n\n  const contactDetails = orderDetails?.email || '';\n  const hasToDisplayContactDetails = orderDetails && contactDetails !== '';\n\n  const shippingAddress = orderDetails?.shipping_address;\n  const hasToDisplayShippingAddress = orderDetails && shippingAddress !== null;\n\n  const billingAddress = orderDetails?.billing_address;\n  const hasToDisplayBillingAddress = orderDetails && billingAddress !== null;\n\n  const shippingMethod = orderDetails?.shipping_method;\n  const shippingCost = orderDetails?.total?.total_shipping?.value;\n  const shippingCurrency = orderDetails?.total?.total_shipping?.currency;\n  const hasToDisplayShippingMethod =\n    orderDetails && shippingMethod && shippingCurrency && shippingCost != null;\n\n  const paymentMethods = orderDetails?.payment_methods;\n  const hasPaymentMethod = paymentMethods && paymentMethods.length > 0;\n  const selectedPaymentMethod = hasPaymentMethod ? paymentMethods[0]?.name : '';\n  const hasToDisplayPaymentMethod =\n    orderDetails && hasPaymentMethod && selectedPaymentMethod !== '';\n\n  return (\n    <Card\n      variant={'secondary'}\n      className={'order-confirmation-details order-confirmation__card'}\n    >\n      <div className={'order-confirmation-details__header'}>\n        <h2 className={'order-confirmation-details__title'}>\n          <Text id={'OrderConfirmation.Details.title'} />\n        </h2>\n      </div>\n\n      <div className={'order-confirmation-details__contact'}>\n        {(!orderDetails || hasToDisplayContactDetails) && (\n          <h3>\n            <Text id={'OrderConfirmation.Details.contact'} />\n          </h3>\n        )}\n\n        {hasToDisplayContactDetails && <p>{contactDetails}</p>}\n\n        {!hasOrderDetails && (\n          <StaticSkeleton\n            rows={1}\n            data-testid=\"order-confirmation-details-contact-skeleton\"\n          />\n        )}\n      </div>\n\n      <div className={'order-confirmation-details__information'}>\n        <div className={'order-confirmation-details__shipping_address'}>\n          {(!hasOrderDetails || hasToDisplayShippingAddress) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.shippingAddress'} />\n            </h3>\n          )}\n\n          {hasToDisplayShippingAddress && (\n            <>\n              <p>\n                {shippingAddress?.firstname} {shippingAddress?.lastname}\n              </p>\n\n              {shippingAddress?.street.map((street, index) => (\n                <p key={index}>{street}</p>\n              ))}\n\n              <p>\n                {shippingAddress?.city} {shippingAddress?.region}{' '}\n                {shippingAddress?.postcode}, {shippingAddress?.country_code}\n              </p>\n            </>\n          )}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={3}\n              data-testid=\"order-confirmation-shipping-address-skeleton\"\n            />\n          )}\n        </div>\n\n        <div className={'order-confirmation-details__billing_address'}>\n          {(!hasOrderDetails || hasToDisplayBillingAddress) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.billingAddress'} />\n            </h3>\n          )}\n\n          {hasToDisplayBillingAddress && (\n            <>\n              <p>\n                {billingAddress?.firstname} {billingAddress?.lastname}\n              </p>\n\n              {billingAddress?.street.map((street, index) => (\n                <p key={index}>{street}</p>\n              ))}\n\n              <p>\n                {billingAddress?.city} {billingAddress?.region}{' '}\n                {billingAddress?.postcode}, {billingAddress?.country_code}\n              </p>\n            </>\n          )}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={3}\n              data-testid=\"order-confirmation-billing-address-skeleton\"\n            />\n          )}\n        </div>\n\n        <div className={'order-confirmation-details__shipping-method'}>\n          {(!hasOrderDetails || hasToDisplayShippingMethod) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.shippingMethod'} />\n            </h3>\n          )}\n\n          {hasToDisplayShippingMethod && (\n            <>\n              {shippingCost === 0 ? (\n                <p className=\"order-confirmation-order-summary__price\">\n                  <Text id=\"OrderConfirmation.Details.freeShipping\" />\n                </p>\n              ) : (\n                <p>\n                  <Price amount={shippingCost} currency={shippingCurrency} />{' '}\n                  {shippingMethod}\n                </p>\n              )}\n            </>\n          )}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={1}\n              data-testid=\"order-confirmation-details-shipping-method-skeleton\"\n            />\n          )}\n        </div>\n\n        <div className={'order-confirmation-details__payment-method'}>\n          {(!hasOrderDetails || hasToDisplayPaymentMethod) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.paymentMethod'} />\n            </h3>\n          )}\n\n          {hasToDisplayPaymentMethod && <p>{selectedPaymentMethod}</p>}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={1}\n              data-testid=\"order-confirmation-details-payment-method-skeleton\"\n            />\n          )}\n        </div>\n      </div>\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Card, Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const DetailsSkeleton: FunctionComponent = () => {\n  return (\n    <Card variant={'secondary'} className={'order-confirmation-details'}>\n      <Skeleton data-testid=\"order-confirmation-details-skeleton\">\n        <SkeletonRow variant={'heading'} size=\"medium\" fullWidth={true} />\n        <SkeletonRow size=\"medium\" />\n        <SkeletonRow variant={'empty'} size=\"medium\" />\n        <SkeletonRow size=\"xlarge\" />\n        <SkeletonRow size=\"xlarge\" />\n        <SkeletonRow size=\"xlarge\" />\n        <SkeletonRow size=\"xlarge\" />\n      </Skeleton>\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport { Button } from '@adobe/elsie/components';\nimport { Text } from '@adobe/elsie/i18n';\nimport { FooterSkeleton } from '@/order-confirmation/components';\nimport '@/order-confirmation/components/Footer/Footer.css';\n\nexport interface FooterProps extends HTMLAttributes<HTMLDivElement> {\n  isLoading: boolean;\n  routeHome?: () => string;\n  routeSupport?: () => string;\n}\n\nexport const Footer: FunctionComponent<FooterProps> = ({\n  isLoading,\n  className,\n  routeHome,\n  routeSupport,\n  ...props\n}) => {\n  if (isLoading) {\n    return <FooterSkeleton />;\n  }\n\n  return (\n    <div\n      className={classes(['order-confirmation-footer', className])}\n      {...props}\n    >\n      {routeHome?.() && (\n        <Button\n          data-testid=\"order-confirmation-footer__continue-button\"\n          className=\"order-confirmation-footer__continue-button\"\n          size={'medium'}\n          variant={'primary'}\n          key={'continueShopping'}\n          type={'submit'}\n          href={routeHome?.()}\n        >\n          <Text id={'OrderConfirmation.Footer.continueShopping'} />\n        </Button>\n      )}\n\n      <p className=\"order-confirmation-footer__contact-support\">\n        <Text id={'OrderConfirmation.Footer.help'} />{' '}\n        {routeSupport?.() && (\n          <a\n            href={routeSupport?.()}\n            rel={'noreferrer'}\n            className=\"order-confirmation-footer__contact-support-link\"\n            data-testid=\"order-confirmation-footer__contact-support-link\"\n          >\n            <Text id={'OrderConfirmation.Footer.contactSupport'} />\n          </a>\n        )}\n      </p>\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const FooterSkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton className={'order-confirmation-footer'}>\n      <SkeletonRow size=\"small\" fullWidth={true} />\n      <SkeletonRow variant={'heading'} size=\"xsmall\" fullWidth={true} />\n    </Skeleton>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\nimport '@/order-confirmation/components/StaticSkeleton/StaticSkeleton.css';\nimport { HTMLAttributes } from 'preact/compat';\n\nexport interface StaticSkeletonProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'size'> {\n  rows: number;\n  size?: 'xsmall' | 'small' | 'medium' | 'large' | 'xlarge';\n}\nexport const StaticSkeleton: FunctionComponent<StaticSkeletonProps> = ({\n  rows,\n  size = 'xsmall',\n  ...props\n}) => {\n  return (\n    <Skeleton className={'static-skeleton'} {...props}>\n      {Array.from(Array(rows).keys()).map((i) => (\n        <SkeletonRow key={i} variant={'heading'} size={size} fullWidth={true} />\n      ))}\n    </Skeleton>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport '@/order-confirmation/components/OrderSummary/OrderSummary.css';\nimport { Text } from '@adobe/elsie/i18n';\nimport { Card, Divider, Price } from '@adobe/elsie/components';\nimport {\n  StaticSkeleton,\n  OrderSummarySkeleton,\n} from '@/order-confirmation/components';\n\nexport type CartTaxItem = {\n  label: string;\n  amount: {\n    value?: number;\n    currency?: string;\n  };\n};\n\nexport type Summary = {\n  total: {\n    inclTax: {\n      amount: number;\n      currency: string;\n    };\n    exclTax?: {\n      amount: number;\n      currency: string;\n    };\n  };\n  subtotal: {\n    amount: number;\n    currency: string;\n    isTaxIncl: boolean;\n  };\n  shipping?: {\n    amount: number;\n    currency: string;\n  };\n  tax?: {\n    amount: number;\n    currency: string;\n    breakdown?: CartTaxItem[];\n  };\n};\n\nexport interface OrderSummaryProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'summary'> {\n  isLoading: boolean;\n  summary?: Summary;\n  variant?: 'primary' | 'secondary';\n}\n\nexport const OrderSummary: FunctionComponent<OrderSummaryProps> = ({\n  className,\n  isLoading,\n  summary,\n  variant = 'secondary',\n}) => {\n  if (isLoading) {\n    return <OrderSummarySkeleton />;\n  }\n\n  const { total, subtotal, shipping, tax } = summary ?? {};\n\n  return (\n    <Card\n      className={classes(['order-confirmation-order-summary', className])}\n      variant={variant}\n    >\n      {/* move heading to elsie? */}\n      <h2 className=\"order-confirmation-order-summary__title\">\n        <Text id=\"OrderConfirmation.OrderSummary.title\" />\n      </h2>\n\n      <Divider variant=\"primary\" />\n\n      {subtotal != undefined ? (\n        <div\n          data-testid=\"order-summary-subtotal\"\n          className=\"order-confirmation-order-summary__row\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.subtotal\" />\n          </p>\n          <Price\n            amount={subtotal?.amount}\n            currency={subtotal?.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      ) : (\n        <StaticSkeleton\n          rows={1}\n          data-testid=\"order-confirmation-order-summary-subtotal-skeleton\"\n        />\n      )}\n\n      {subtotal?.isTaxIncl && (\n        <div\n          data-testid=\"order-summary-subtotal-incl-tax\"\n          className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--muted\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.includingTaxes\" />\n          </p>\n        </div>\n      )}\n\n      {shipping != undefined ? (\n        <div\n          data-testid=\"order-summary-shipping\"\n          className=\"order-confirmation-order-summary__row\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.shipping\" />\n          </p>\n\n          {shipping.amount === 0 ? (\n            <p className=\"order-confirmation-order-summary__price\">\n              <Text id=\"OrderConfirmation.OrderSummary.freeShipping\" />\n            </p>\n          ) : (\n            <Price\n              amount={shipping.amount}\n              currency={shipping.currency}\n              className={classes([\n                'order-confirmation-order-summary__price',\n                className,\n              ])}\n            />\n          )}\n        </div>\n      ) : (\n        <StaticSkeleton\n          rows={1}\n          data-testid=\"order-confirmation-order-summary-shipping-skeleton\"\n        />\n      )}\n\n      {tax != undefined && !tax.breakdown && (\n        <div\n          data-testid=\"order-summary-tax\"\n          className=\"order-confirmation-order-summary__row\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.tax\" />\n          </p>\n          <Price\n            amount={tax.amount}\n            currency={tax.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      )}\n\n      {tax != undefined && tax.breakdown && (\n        <>\n          <Divider variant=\"secondary\" />\n\n          <div className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--margin-bottom\">\n            <p>\n              <Text id=\"OrderConfirmation.OrderSummary.taxBreakdown\" />\n            </p>\n          </div>\n\n          {tax.breakdown.map((tax) => (\n            <div\n              data-testid=\"order-summary-tax-breakdown\"\n              key={tax.label}\n              className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--muted\"\n            >\n              <p>{tax.label}</p>\n\n              <Price\n                amount={tax.amount.value!}\n                currency={tax.amount.currency!}\n                className={classes([\n                  'order-confirmation-order-summary__price',\n                  className,\n                ])}\n              />\n            </div>\n          ))}\n\n          <div\n            data-testid=\"order-summary-tax-breakdown-total\"\n            className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--strong order-confirmation-order-summary__row--margin-top\"\n          >\n            <p>\n              <Text id=\"OrderConfirmation.OrderSummary.taxTotal\" />\n            </p>\n\n            <Price\n              amount={tax.amount}\n              currency={tax.currency}\n              className={classes([\n                'order-confirmation-order-summary__price',\n                className,\n              ])}\n            />\n          </div>\n\n          <Divider variant=\"secondary\" />\n        </>\n      )}\n\n      {total != undefined ? (\n        <div\n          data-testid=\"order-summary-total-incl-tax\"\n          className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--emphasized\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.total\" />\n          </p>\n\n          <Price\n            amount={total?.inclTax.amount}\n            currency={total?.inclTax.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      ) : (\n        <StaticSkeleton\n          rows={1}\n          data-testid=\"order-confirmation-order-summary-total-skeleton\"\n        />\n      )}\n\n      {total?.exclTax != undefined && (\n        <div\n          data-testid=\"order-summary-total-excl-tax\"\n          className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--muted\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.totalExclTax\" />\n          </p>\n\n          <Price\n            amount={total.exclTax.amount}\n            currency={total.exclTax.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      )}\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const OrderSummarySkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton\n      data-testid=\"order-confirmation-order-summary-skeleton\"\n      className={'order-confirmation-order-summary'}\n    >\n      <SkeletonRow variant=\"heading\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow variant=\"heading\" size=\"small\" fullWidth={true} lines={3} />\n    </Skeleton>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport { useText } from '@adobe/elsie/i18n';\nimport '@/order-confirmation/components/CartSummaryItem/CartSummaryItem.css';\nimport { CartItem, Image, Price } from '@adobe/elsie/components';\nimport { transformItems } from '@/order-confirmation/data/transforms/transform-order-items';\n\nexport interface CartSummaryItemProps extends HTMLAttributes<HTMLDivElement> {\n  item: ReturnType<typeof transformItems>;\n  taxIncluded?: boolean;\n}\n\nexport const CartSummaryItem: FunctionComponent<CartSummaryItemProps> = ({\n  className,\n  item,\n  taxIncluded = false,\n}) => {\n  const translations = useText({\n    Sender: 'OrderConfirmation.CartSummary.GiftCard.sender',\n    Recipient: 'OrderConfirmation.CartSummary.GiftCard.recipient',\n  });\n\n  let price = item.regularPrice;\n  let total = item.total;\n\n  if (taxIncluded) {\n    price = item.priceInclTax;\n    total = item.totalInclTax;\n  }\n\n  const configurations = {\n    ...('configurableOptions' in item ? item.configurableOptions : {}),\n    ...('senderName' in item && item.senderName\n      ? { [translations.Sender]: item.senderName }\n      : {}),\n    ...('senderEmail' in item && item.senderEmail\n      ? { [translations.Sender]: item.senderEmail }\n      : {}),\n    ...('recipientName' in item && item.recipientName\n      ? { [translations.Recipient]: item.recipientName }\n      : {}),\n    ...('recipientEmail' in item && item.recipientEmail\n      ? { [translations.Recipient]: item.recipientEmail }\n      : {}),\n  };\n\n  return (\n    <div\n      className={classes(['order-confirmation-cart-summary-item', className])}\n    >\n      <CartItem\n        data-testid=\"cart-summary-item\"\n        key={item.uid}\n        taxIncluded={taxIncluded}\n        title={<div data-testid=\"product-name\">{item.name}</div>}\n        sku={<div>{item.sku}</div>}\n        quantity={item.quantity!}\n        image={\n          <Image\n            src={item.image.src!}\n            alt={item.image.alt!}\n            loading=\"lazy\"\n            width=\"80\"\n            height=\"80\"\n            params={{ width: 80 }}\n          />\n        }\n        configurations={configurations}\n        price={\n          <Price\n            amount={item.regularPrice.value}\n            currency={price.currency}\n            weight=\"normal\"\n          />\n        }\n        total={\n          <>\n            <Price\n              amount={item.regularPrice.value * item.quantity!}\n              currency={price.currency}\n              variant={item.discounted ? 'strikethrough' : 'default'}\n            />\n\n            {item.discounted && (\n              <Price amount={total.value} currency={total.currency!} sale />\n            )}\n          </>\n        }\n      />\n    </div>\n  );\n};\n","import { GuestOrderDataFragment } from '@/order-confirmation/__generated__/types';\n\ntype NonNullableItems = NonNullable<GuestOrderDataFragment['items']>;\ntype NonNullableItem = NonNullable<NonNullableItems[number]>;\n\nexport function transformItems(item: NonNullableItem) {\n  return {\n    uid: item.id,\n    quantity: item.quantity_ordered,\n    sku: item.product!.sku,\n    name: item.product!.name,\n    image: {\n      src: item.product!.thumbnail!.url,\n      alt: item.product!.thumbnail!.label,\n    },\n    price: {\n      value: item.product_sale_price.value,\n      currency: item.product_sale_price.currency,\n    },\n    priceInclTax: {\n      value: item.product_sale_price.value!,\n      currency: item.product_sale_price.currency!,\n    },\n    total: {\n      value: item.product_sale_price.value! * item.quantity_ordered!,\n      currency: item.product_sale_price.currency,\n    },\n    totalInclTax: {\n      value: item.product_sale_price.value! * item.quantity_ordered!,\n      currency: item.product_sale_price.currency,\n    },\n    discount: {\n      value: 0,\n      currency: item.product_sale_price.currency,\n    },\n    regularPrice: {\n      value: item.product!.price_range.maximum_price!.regular_price.value!,\n      currency:\n        item.product!.price_range.maximum_price!.regular_price.currency!,\n    },\n    discounted:\n      item.product!.price_range.maximum_price!.regular_price.value! *\n        item.quantity_ordered! !==\n      item.product_sale_price.value! * item.quantity_ordered!,\n    configurableOptions: transformConfigurableOptions(item),\n    senderName:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.sender_name\n        : undefined,\n    senderEmail:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.sender_email!\n        : undefined,\n    recipientEmail:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.recipient_email!\n        : undefined,\n    recipientName:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.recipient_name\n        : undefined,\n  };\n}\nfunction transformConfigurableOptions(item: NonNullableItem) {\n  if (!('selected_options' in item)) return;\n\n  const configurableOptions: Record<string, string> = {};\n\n  for (const option of item.selected_options!) {\n    configurableOptions[option!.label] = option!.value;\n  }\n\n  return configurableOptions;\n}\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { Text } from '@adobe/elsie/i18n';\nimport { Card, Divider } from '@adobe/elsie/components';\nimport '@/order-confirmation/components/CartSummary/CartSummary.css';\nimport { CartSummarySkeleton } from '@/order-confirmation/components/CartSummary';\nimport { CartSummaryItem } from '@/order-confirmation/components/CartSummaryItem';\nimport { transformItems } from '@/order-confirmation/data/transforms/transform-order-items';\nimport { State } from '@/order-confirmation/reducers';\n\n// TODO details type\nexport interface CartSummaryProps extends HTMLAttributes<HTMLDivElement> {\n  isLoading: boolean;\n  details: State['details'];\n}\n\nexport const CartSummary: FunctionComponent<CartSummaryProps> = ({\n  isLoading,\n  details,\n}) => {\n  if (isLoading) {\n    return <CartSummarySkeleton />;\n  }\n\n  // TODO tax included\n  const taxIncluded = false;\n  const items = details!.items!;\n\n  // const totalQuantity = details?.items?.reduce(\n  //   (total: number, item: any) => total + item.quantity_ordered,\n  //   0\n  // );\n\n  // TODO: Quantity should be based on config: https://jira.corp.adobe.com/browse/USF-1089\n  const totalQuantity = items.length;\n\n  return (\n    <div className=\"order-confirmation-cart-summary\">\n      <Card variant=\"secondary\">\n        <div className=\"order-confirmation-cart-summary__heading\">\n          <h2 className={'order-confirmation-cart-summary__title'}>\n            <Text id=\"OrderConfirmation.CartSummary.title\" /> ({totalQuantity})\n          </h2>\n        </div>\n        <Divider\n          className=\"order-confirmation-cart-summary__divider-top\"\n          variant=\"primary\"\n        />\n\n        <div className=\"order-confirmation-cart-summary__items\">\n          {items?.map((item: any) => {\n            const cartItem = transformItems(item);\n            return (\n              <CartSummaryItem\n                key={cartItem?.uid}\n                item={cartItem}\n                taxIncluded={taxIncluded}\n              />\n            );\n          })}\n        </div>\n      </Card>\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const CartItemSkeleton: FunctionComponent = () => {\n  return (\n    <div className=\"dropin-cart-item dropin-cart-item-skeleton\">\n      <Skeleton className=\"dropin-cart-item__skeleton dropin-cart-item__wrapper\">\n        <div className=\"dropin-cart-item__image\">\n          <SkeletonRow className=\"dropin-cart-item__skeleton__item\" />\n        </div>\n        <div className=\"dropin-cart-item__title\">\n          <SkeletonRow className=\"dropin-cart-item__skeleton__item\" />\n        </div>\n        <div className=\"dropin-cart-item__sku\">\n          <SkeletonRow className=\"dropin-cart-item__skeleton__item\" />\n        </div>\n        <div className=\"dropin-cart-item__price\">\n          <SkeletonRow className=\"dropin-cart-item__skeleton__item\" />\n        </div>\n        <div className=\"dropin-cart-item__quantity\">\n          <SkeletonRow className=\"dropin-cart-item__skeleton__item\" />\n        </div>\n        <div className=\"dropin-cart-item__total\">\n          <SkeletonRow className=\"dropin-cart-item__skeleton__item\" />\n        </div>\n      </Skeleton>\n    </div>\n  );\n};\n","import { CartItemSkeleton } from '@adobe/elsie/components/CartItem/CartItemSkeleton';\nimport { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const CartSummarySkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton\n      data-testid=\"cart-summary-skeleton\"\n      className=\"order-confirmation-cart-summary\"\n      style={{ gridTemplateColumns: '1fr' }}\n    >\n      <SkeletonRow variant=\"heading\" fullWidth={true} size=\"medium\" />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n    </Skeleton>\n  );\n};\n","import {\n  guestOrder,\n  GuestOrderInput,\n  guestOrderByToken,\n} from '@/order-confirmation/api';\nimport {\n  OrderSearchFields,\n  OrderConfirmation as Component,\n} from '@/order-confirmation/components';\nimport {\n  Actions,\n  Alert,\n  AlertCode,\n  AlertType,\n  orderConfirmationReducer,\n} from '@/order-confirmation/reducers/orderConfirmation';\nimport { useText } from '@adobe/elsie/i18n';\nimport { Container } from '@adobe/elsie/lib';\nimport {\n  HTMLAttributes,\n  useCallback,\n  useEffect,\n  useReducer,\n} from 'preact/compat';\n\nexport interface OrderConfirmationProps extends HTMLAttributes<HTMLDivElement> {\n  token?: string;\n  routeHome?: () => string;\n  routeSupport?: () => string;\n}\n\nfunction useOrderConfirmation(token?: string) {\n  const [state, dispatch] = useReducer(orderConfirmationReducer, {\n    isLoading: false,\n    token,\n    details: null,\n  });\n\n  const translations = useText({\n    invalidOrder: 'OrderConfirmation.Errors.invalidOrder',\n    invalidSearch: 'OrderConfirmation.Errors.invalidSearch',\n    pageNotFound: 'OrderConfirmation.Errors.pageNotFound',\n    unknown: 'OrderConfirmation.Errors.unknown',\n  });\n\n  const buildAlert = useCallback(\n    (message: string): Alert | undefined => {\n      switch (message) {\n        case 'Invalid order':\n        case \"We couldn't locate an order with the information provided.\":\n          return {\n            type: AlertType.WARNING,\n            code: AlertCode.INVALID_ORDER,\n            message: translations.invalidOrder,\n          };\n        case 'Invalid search':\n          return {\n            type: AlertType.WARNING,\n            code: AlertCode.INVALID_SEARCH,\n            message: translations.invalidSearch,\n          };\n      }\n    },\n    [translations.invalidOrder, translations.invalidSearch]\n  );\n\n  const fetchOrderDetails = useCallback(\n    (fields?: OrderSearchFields) => {\n      guestOrder(fields as GuestOrderInput)\n        .then((details) => {\n          // order number is only returned if valid order inputs are provided\n          const hasOrderDetails = !!details?.number;\n\n          const alert = hasOrderDetails\n            ? undefined\n            : buildAlert('Invalid search');\n\n          dispatch({\n            type: Actions.SET_DETAILS,\n            details,\n            alert,\n          });\n        })\n        .catch(() => {\n          const alert = buildAlert('Invalid search');\n\n          dispatch({\n            type: Actions.SET_DETAILS,\n            details: null,\n            alert,\n          });\n        });\n    },\n    [buildAlert]\n  );\n\n  const fetchOrderDetailsByToken = useCallback(\n    (token: string) => {\n      guestOrderByToken(token)\n        .then((details) => {\n          // order number is only returned if valid order inputs are provided\n          const hasOrderDetails = !!details?.number;\n\n          const alert = hasOrderDetails\n            ? undefined\n            : buildAlert('Invalid order');\n\n          dispatch({\n            type: Actions.SET_DETAILS,\n            details,\n            alert,\n          });\n        })\n        .catch((error) => {\n          const knownAlert = buildAlert(error.message);\n\n          if (!knownAlert) {\n            console.error(error);\n            return;\n          }\n\n          dispatch({\n            type: Actions.ALERT,\n            alert: knownAlert,\n          });\n        });\n    },\n    [buildAlert]\n  );\n\n  const dismissAlert = () => {\n    dispatch({ type: Actions.DISMISS_ALERT });\n  };\n\n  const handleOrderSearch = function (fields: OrderSearchFields) {\n    fetchOrderDetails(fields);\n  };\n\n  useEffect(() => {\n    if (!state.token) return;\n\n    dispatch({ type: Actions.LOADING });\n\n    fetchOrderDetailsByToken(state.token);\n  }, [state.token, fetchOrderDetailsByToken]);\n\n  return {\n    state,\n    handleOrderSearch,\n    dismissAlert,\n  };\n}\n\nexport const OrderConfirmation: Container<OrderConfirmationProps> = ({\n  token,\n  routeHome,\n  routeSupport,\n}) => {\n  const { state, handleOrderSearch, dismissAlert } =\n    useOrderConfirmation(token);\n\n  return (\n    <Component\n      state={state}\n      dismissAlert={dismissAlert}\n      onOrderSearch={handleOrderSearch}\n      routeHome={routeHome}\n      routeSupport={routeSupport}\n    />\n  );\n};\n"],"names":["getFormValues","form","formData","FormData","result","Object","fromEntries","Actions","ADD_ORDER_REFERENCE","LOADING","SET_DETAILS","ALERT","DISMISS_ALERT","AlertType","ERROR","WARNING","SUCCESS","AlertCode","INVALID_ORDER","INVALID_SEARCH","UNKNOWN","orderConfirmationReducer","state","action","type","isLoading","details","alert","undefined","useBreakpoint","getBreakpoint","window","innerWidth","breakpoint","setBreakpoint","useState","useEffect","timeoutId","handleResize","clearTimeout","setTimeout","addEventListener","removeEventListener","ConditionalWrapper","children","className","_jsx","_Fragment","mapDetailsToSummary","orderDetails","total","grandTotal","grand_total","subtotal","shipping","total_shipping","tax","total_tax","inclTax","amount","value","currency","isTaxIncl","Aside","summary","_jsxs","OrderSummary","CartSummary","AsideElement","Main","routeHome","routeSupport","billingAddress","billing_address","customerName","firstname","orderNumber","number","orderStatus","status","showCustomerHeader","Header","Details","Footer","MainElement","dismissAlert","onOrderSearch","OrderConfirmation","hasOrderDetails","isInvalidOrder","code","isInvalidSearch","classes","OrderSearchForm","heading","message","description","onDismiss","HeaderSkeleton","Icon","source","OrderSuccess","size","Text","id","fields","name","order","Skeleton","SkeletonRow","variant","fullWidth","VARIANT_TO_ICON_MAP","error","WarningFilled","success","CheckWithCircle","warning","InLineAlert","additionalActions","props","icon","translations","dismiss","length","Button","onClick","label","Close","stroke","map","useText","email","postcode","handleSubmit","event","preventDefault","formValues","target","Card","onSubmit","Field","Input","autocomplete","placeholder","floatingLabel","required","DetailsSkeleton","contactDetails","hasToDisplayContactDetails","shippingAddress","shipping_address","hasToDisplayShippingAddress","hasToDisplayBillingAddress","shippingMethod","shipping_method","shippingCost","shippingCurrency","hasToDisplayShippingMethod","paymentMethods","payment_methods","hasPaymentMethod","selectedPaymentMethod","hasToDisplayPaymentMethod","StaticSkeleton","rows","lastname","street","index","city","region","country_code","Price","FooterSkeleton","href","rel","Array","from","keys","i","OrderSummarySkeleton","Divider","breakdown","exclTax","lines","CartSummaryItem","item","taxIncluded","Sender","Recipient","price","regularPrice","priceInclTax","totalInclTax","configurations","configurableOptions","senderName","senderEmail","recipientName","recipientEmail","CartItem","title","sku","quantity","image","Image","src","alt","loading","width","height","params","weight","discounted","sale","uid","transformItems","quantity_ordered","product","thumbnail","url","product_sale_price","discount","price_range","maximum_price","regular_price","transformConfigurableOptions","__typename","gift_card","sender_name","sender_email","recipient_email","recipient_name","option","selected_options","CartSummarySkeleton","items","totalQuantity","cartItem","CartItemSkeleton","style","gridTemplateColumns","useOrderConfirmation","token","dispatch","useReducer","invalidOrder","invalidSearch","pageNotFound","unknown","buildAlert","useCallback","fetchOrderDetails","then","catch","fetchOrderDetailsByToken","knownAlert","console","handleOrderSearch","Component"],"mappings":"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"}