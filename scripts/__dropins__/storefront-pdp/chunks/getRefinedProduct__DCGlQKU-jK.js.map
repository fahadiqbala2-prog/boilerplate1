{"version":3,"file":"getRefinedProduct__DCGlQKU-jK.js","sources":["../../src/api/fetch-graphql/fetch-graphql.ts","../../src/data/transforms/product-transform.ts","../../src/api/graphql/ProductOptionFragment.graphql.ts","../../src/api/graphql/ProductFragment.graphql.ts","../../src/api/getProductData/graphql/getProductData.graphql.ts","../../src/api/getProductData/getProductData.ts","../../src/api/getRefinedProduct/graphql/RefineProductQuery.graphql.ts","../../src/api/getRefinedProduct/getRefinedProduct.ts"],"sourcesContent":["import { FetchGraphQL } from '@adobe/fetch-graphql';\n\nexport const {\n  setEndpoint,\n  setFetchGraphQlHeader,\n  removeFetchGraphQlHeader,\n  setFetchGraphQlHeaders,\n  fetchGraphQl,\n  getConfig,\n} = new FetchGraphQL().getMethods();\n","import { config } from '@/pdp/api';\nimport { ProductModel } from '@/pdp/data/models';\n\nexport function transformProductData(data: any): ProductModel | null {\n  const productData = data\n    ? ({\n        name: data.name,\n        sku: data.sku,\n        addToCartAllowed: data.addToCartAllowed,\n        inStock: data.inStock,\n        shortDescription: data.shortDescription,\n        metaDescription: data.metaDescription,\n        metaKeyword: data.metaKeyword,\n        metaTitle: data.metaTitle,\n        description: data.description,\n        images: transformImages(data),\n        prices: transformPrices(data),\n        attributes: transformAttributes(data),\n        options: transformOptions(data),\n        optionUIDs: data.optionUIDs,\n        url: data.url,\n        urlKey: data.urlKey,\n        externalId: data.externalId,\n        externalParentId: data.externalParentId,\n      } as ProductModel)\n    : null;\n\n  const transform = config.getConfig()?.models?.ProductDetails?.transform;\n  if (transform && productData) {\n    return transform(productData);\n  }\n\n  return productData;\n}\n\nfunction transformImages(data: any) {\n  return data.images?.map((image: any) => {\n    // Remove protocol from image URL\n    image.url = image.url.replace(/^https?:/, '');\n\n    return image;\n  });\n}\n\nfunction transformAttributes(data: any) {\n  return (\n    data.attributes\n      // only show attributes that are visible in PDP\n      ?.filter(({ roles }: any) => roles?.indexOf('visible_in_pdp') !== -1)\n      // transform attribute values\n      ?.map(({ label, value, name }: any) => {\n        return { id: name, label, value: value.toString().split(',').join(', ') };\n      })\n  );\n}\n\nfunction transformOptions(data: any) {\n  const { options, optionUIDs } = data;\n\n  return options?.map(({ id, title, required, multi, values }: any) => {\n    const typename = values?.[0]?.__typename;\n    let type: any = values?.[0].type;\n\n    const isBundle = values?.[0]?.__typename === 'ProductViewOptionValueProduct';\n\n    if (isBundle) {\n      type = undefined;\n    } else {\n      if (type) {\n        type = type\n          .replace('COLOR_HEX', 'color')\n          .replace('TEXT', 'text')\n          .replace('IMAGE', 'image');\n      } else {\n        type = 'dropdown';\n      }\n    }\n\n    return {\n      id,\n      type,\n      typename,\n      label: title,\n      required,\n      multiple: multi,\n      items: values?.map(({ id, title, inStock, value }: any) => {\n        return {\n          id,\n          label: title,\n          inStock,\n          value: type?.toLowerCase() === 'dropdown' ? id : value?.replace(/^https?:/, ''),\n          selected: optionUIDs?.indexOf(id) > -1,\n        };\n      }),\n    };\n  });\n}\n\nfunction transformPrices(data: any) {\n  const { price, priceRange, __typename: type } = data;\n\n  function getSimpleProductPrices() {\n    const regularPrice = price.regular.amount.value;\n    const finalPrice = price.final?.amount.value ?? price.regular.amount.value;\n\n    const currency = price.regular.amount.currency === 'NONE' //temporary fix if there is no currency\n      ? 'USD'\n      : price?.regular.amount.currency\n\n    return [regularPrice, finalPrice, finalPrice, currency];\n  }\n\n  function getComplexProductPrices() {\n    const finalMinimumPrice = priceRange?.minimum?.final.amount.value;\n    const finalMaximumPrice = priceRange?.maximum?.final.amount.value;\n    let regularPrice;\n\n    if (priceRange?.minimum?.regular?.amount.value === priceRange?.maximum?.regular?.amount.value) {\n      regularPrice = priceRange?.minimum?.regular?.amount.value;\n    }\n\n    const currency = priceRange?.minimum?.final?.amount.currency === 'NONE'\n        ? 'USD'\n        : priceRange?.minimum?.final?.amount.currency;\n\n    return [regularPrice, finalMinimumPrice, finalMaximumPrice, currency];\n  }\n\n  const [regularPrice, finalMinimumPrice, finalMaximumPrice, currency] = type === 'SimpleProductView'\n    ? getSimpleProductPrices() : getComplexProductPrices();\n\n  const visible =\n    type === 'SimpleProductView'\n      ? price?.roles?.includes('visible')\n      : priceRange?.maximum?.roles?.includes('visible') &&\n      priceRange?.minimum?.roles?.includes('visible');\n\n  if (finalMaximumPrice && finalMinimumPrice === finalMaximumPrice) {\n    const hasDiscount = regularPrice && finalMinimumPrice !== regularPrice;\n\n    return {\n      regular: {\n        amount: regularPrice,\n        currency,\n        variant: hasDiscount ? 'strikethrough' : 'default',\n      },\n      final: {\n        amount: finalMaximumPrice,\n        currency,\n        variant: 'default',\n      },\n      visible\n    }\n  }\n\n  return {\n    final: {\n      minimumAmount: finalMinimumPrice,\n      maximumAmount: finalMaximumPrice,\n      currency\n    },\n    visible\n  }\n}\n","export const ProductOptionFragment = `\nfragment ProductOptionFragment on ProductViewOption {\n    id\n    title\n    required\n    multi\n    values {\n      id\n      title\n      inStock\n      __typename\n      ... on ProductViewOptionValueProduct {\n        title\n        quantity\n        isDefault\n        product {\n          sku\n          shortDescription\n          metaDescription\n          metaKeyword\n          metaTitle\n          name\n          price {\n            final {\n              amount {\n                value\n                currency\n              }\n            }\n            regular {\n              amount {\n                value\n                currency\n              }\n            }\n            roles\n          }\n        }\n      }\n      ... on ProductViewOptionValueSwatch {\n        id\n        title\n        type\n        value\n        inStock\n      }\n    }\n  }\n`;\n","import { ProductOptionFragment } from '@/pdp/api/graphql/ProductOptionFragment.graphql';\n\nexport const ProductFragment = `\nfragment ProductFragment on ProductView {\n  __typename\n  id\n  sku\n  name\n  shortDescription\n  metaDescription\n  metaKeyword\n  metaTitle\n  description\n  inStock\n  addToCartAllowed\n  url\n  urlKey\n  externalId\n\n  images(roles: []) {\n    url\n    label\n    roles\n  }\n\n  attributes(roles: []) {\n    name\n    label\n    value\n    roles\n  }\n\n... on SimpleProductView {\n    price {\n        roles\n\n        regular {\n            amount {\n                value\n                currency\n            }\n        }\n\n        final {\n            amount {\n                value\n                currency\n            }\n        }\n    }\n}\n\n\n  ... on ComplexProductView {\n    options {\n      ...ProductOptionFragment\n    }\n\n    priceRange {\n      maximum {\n        final {\n          amount {\n            value\n            currency\n          }\n        }\n        regular {\n          amount {\n            value\n            currency\n          }\n        }\n        roles\n      }\n      minimum {\n        final {\n          amount {\n            value\n            currency\n          }\n        }\n        regular {\n          amount {\n            value\n            currency\n          }\n        }\n        roles\n      }\n    }\n  }\n}\n\n${ProductOptionFragment}\n`;\n","import { ProductFragment } from '@/pdp/api/graphql/ProductFragment.graphql';\n\nexport const GET_PRODUCT_DATA = `\nquery GET_PRODUCT_DATA($skus: [String]) {\n    products(skus: $skus) {\n        ...ProductFragment\n    }\n}\n\n${ProductFragment}\n`;\n","import { config, fetchGraphQl } from '@/pdp/api';\nimport { ProductModel } from '@/pdp/data/models';\nimport { transformProductData } from '@/pdp/data/transforms';\nimport { GET_PRODUCT_DATA } from './graphql/getProductData.graphql';\n\nexport const getProductData = async (\n  sku: string\n): Promise<ProductModel | null> => {\n\n  const initialData = config?.getConfig()?.models?.ProductDetails?.initialData;\n\n  if (initialData) {\n    return transformProductData(initialData);\n  }\n\n  const { data } = await fetchGraphQl(GET_PRODUCT_DATA, {\n    method: 'GET',\n    variables: { skus: [sku] },\n  });\n\n  const product = data?.products?.[0];\n\n  return transformProductData(product);\n};\n","import { ProductFragment } from '@/pdp/api/graphql/ProductFragment.graphql';\n\nexport const REFINE_PRODUCT_QUERY = `\nquery REFINE_PRODUCT_QUERY(\n    $optionIds: [String!]!\n    $sku: String!\n) {\n    # Refined Product\n    refineProduct(\n        optionIds: $optionIds \n        sku: $sku\n    ) {\n        ...ProductFragment\n    }\n\n    # Parent Product\n    products(skus: [$sku]) {\n        ...ProductFragment\n    }\n\n    # %extendedPlaceholder%\n}\n\n${ProductFragment}\n`;\n","import { fetchGraphQl, config } from '@/pdp/api';\nimport { ProductModel } from '@/pdp/data/models';\nimport { transformProductData } from '@/pdp/data/transforms';\nimport { REFINE_PRODUCT_QUERY } from './graphql/RefineProductQuery.graphql';\n\nasync function getProductData(sku: string, optionUIDs: string[]): Promise<any> {\n  const optionPairCombinations = getPairCombination(optionUIDs);\n  const optionQueries = getProductOptionQuery(optionPairCombinations, sku);\n\n  const mergedQueries = REFINE_PRODUCT_QUERY.replace(\n    '# %extendedPlaceholder%',\n    optionQueries\n  );\n\n  const { data } = await fetchGraphQl(mergedQueries, {\n    method: 'GET',\n    variables: { optionIds: optionUIDs, sku },\n  });\n  return data;\n}\n\nexport const getRefinedProduct = async (\n  sku: string,\n  optionUIDs: string[],\n  anchorOptions?: string[]\n): Promise<ProductModel | null> => {\n\n  const data = await getProductData(sku, optionUIDs);\n\n  if (!data) return null;\n  let { products, refineProduct, ...refinedOptions } = data;\n\n  const parent = products?.[0];\n\n  const options = mergeRefinedOptions(\n    Object.values(refinedOptions),\n    parent.options, anchorOptions\n  );\n\n  // needed when anchor options exist\n  if (anchorOptions?.length && refineProduct === null) {\n    optionUIDs = updateSelections(options, optionUIDs, anchorOptions);\n    const updatedRefinedData = await getProductData(sku, optionUIDs);\n    refineProduct = updatedRefinedData?.refineProduct;\n  }\n\n  const refinedData = transformProductData({\n    ...(refineProduct || parent),\n    sku: parent.sku,\n    name: parent.name,\n    externalParentId: parent?.externalId,\n    options,\n    optionUIDs,\n  });\n\n  const fallback = config?.getConfig()?.models?.ProductDetails?.fallbackData;\n\n  if (fallback) {\n    return fallback(parent, refinedData!);\n  }\n\n  return refinedData;\n};\n\nfunction getPairCombination(arr: string[]): string[][] {\n  if (arr.length < 2) {\n    return [arr];\n  }\n\n  const result: string[][] = [];\n\n  arr.forEach((item) => {\n    const temp: string[] = [];\n\n    arr.forEach((item2) => {\n      if (item !== item2) {\n        temp.push(item2);\n      }\n    });\n\n    result.push(temp);\n  });\n\n  return result;\n}\n\nfunction getProductOptionQuery(optionUIDs: string[][], sku: string): string {\n  return optionUIDs\n    .map((ids: string[], i: number) => {\n      return `\n          ProductOption${i}: refineProduct(\n            optionIds: [\n              ${ids.map((id) => `\"${id}\"`).join(', ')}\n            ]\n            sku: \"${sku}\"\n          ) {\n            ... on ComplexProductView {\n              options {\n                ...ProductOptionFragment\n              }\n            }\n          }\n        `;\n    })\n    .join('');\n}\n\nfunction mergeRefinedOptions(options: {}, parent: [], anchorOptions?: string[]) {\n  // flat _refined[].options[] to _refinedOptions[]\n  const refinedOptions: any = Object.values(options)\n    .filter((x) => !!x)\n    .reduce((acc: any, curr: any) => {\n      if (!curr.options) return [...acc];\n\n      return [...acc, ...curr.options];\n    }, []);\n\n  // Create a map to store items by their id from original\n  const map = new Map(parent.map((item: any) => [item.id, item]));\n\n  // Iterate through refinedOptions and merge items\n  refinedOptions.forEach((current: any) => {\n\n  // anchor options should display all values, so no merge is performed\n  if (anchorOptions?.includes(current.id)) {\n    return;\n  }\n\n    map.set(current.id, current);\n  });\n\n  return [...map.values()];\n}\n\nfunction updateSelections(options: any[], optionsUIDs: string[], anchorOptions: string[]): string[] {\n  const updatedOptionsUIDs: string[] = [];\n\n  let optionValue: string;\n  options.forEach((option: any) => {\n    if (anchorOptions.includes(option.id)) {\n      optionValue = option.values?.find((value: any) => optionsUIDs.includes(value?.id))?.id || option.values[0]?.id;\n    } else {\n      optionValue = option.values[0]?.id; // TODO check if we should use default value instead\n    }\n    updatedOptionsUIDs.push(optionValue);\n  });\n  return updatedOptionsUIDs;\n}\n"],"names":["setEndpoint","setFetchGraphQlHeader","removeFetchGraphQlHeader","setFetchGraphQlHeaders","fetchGraphQl","getConfig","FetchGraphQL","getMethods","transformProductData","data","productData","name","sku","addToCartAllowed","inStock","shortDescription","metaDescription","metaKeyword","metaTitle","description","images","transformImages","prices","transformPrices","attributes","transformAttributes","options","transformOptions","optionUIDs","url","urlKey","externalId","externalParentId","transform","config","models","ProductDetails","map","image","replace","filter","roles","indexOf","label","value","id","toString","split","join","title","required","multi","values","typename","__typename","type","isBundle","undefined","multiple","items","toLowerCase","selected","price","priceRange","getSimpleProductPrices","regularPrice","regular","amount","finalPrice","final","currency","getComplexProductPrices","finalMinimumPrice","minimum","finalMaximumPrice","maximum","visible","includes","hasDiscount","variant","minimumAmount","maximumAmount","ProductOptionFragment","ProductFragment","GET_PRODUCT_DATA","getProductData","initialData","method","variables","skus","product","products","REFINE_PRODUCT_QUERY","optionPairCombinations","getPairCombination","optionQueries","getProductOptionQuery","mergedQueries","optionIds","getRefinedProduct","anchorOptions","refineProduct","refinedOptions","parent","mergeRefinedOptions","Object","length","updateSelections","updatedRefinedData","refinedData","fallback","fallbackData","arr","result","forEach","item","temp","item2","push","ids","i","x","reduce","acc","curr","Map","current","set","optionsUIDs","updatedOptionsUIDs","optionValue","option","find"],"mappings":"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"}