{"version":3,"file":"setGuestEmailOnCart__BoK0QUy0GA.js","sources":["../../src/data/transforms/transform-email-availability.ts","../../src/api/isEmailAvailable/graphql/isEmailAvailable.graphql.ts","../../src/api/isEmailAvailable/isEmailAvailable.ts","../../src/api/setGuestEmailOnCart/graphql/setGuestEmailOnCart.graphql.ts","../../src/api/setGuestEmailOnCart/setGuestEmailOnCart.ts"],"sourcesContent":["import { IsEmailAvailableQuery } from '@/checkout/__generated__/types';\nimport { EmailAvailability } from '@/checkout/data/models';\n\nconst transformEmailAvailability = (\n  data: IsEmailAvailableQuery['isEmailAvailable']\n): EmailAvailability => {\n  return Boolean(data?.is_email_available);\n};\n\nexport { transformEmailAvailability };\n","export const isEmailAvailableQuery = /* GraphQL */`\n  query isEmailAvailable($email: String!) {\n    isEmailAvailable(email: $email) {\n      is_email_available\n    }\n  }\n`;\n","import { IsEmailAvailableQuery } from '@/checkout/__generated__/types';\nimport { fetchGraphQl } from '@/checkout/api';\nimport { MissingEmail } from '@/checkout/api/errors';\nimport { isEmailAvailableQuery } from '@/checkout/api/isEmailAvailable/graphql/isEmailAvailable.graphql';\nimport { EmailAvailability } from '@/checkout/data/models/email-availability';\nimport { transformEmailAvailability } from '@/checkout/data/transforms/transform-email-availability';\nimport { handleFetchErrors } from '@/checkout/lib/fetch-error';\nimport { handleNetworkError } from '@/checkout/lib/network-error';\n\nexport const isEmailAvailable = async (\n  email: string\n): Promise<EmailAvailability> => {\n  if (!email) throw new MissingEmail();\n\n  const { data, errors } = await fetchGraphQl<IsEmailAvailableQuery>(\n    isEmailAvailableQuery,\n    {\n      method: 'GET',\n      cache: 'no-cache',\n      variables: { email },\n    }\n  ).catch(handleNetworkError);\n\n  if (errors) handleFetchErrors(errors);\n\n  return transformEmailAvailability(data.isEmailAvailable);\n};\n","import {\n  CHECKOUT_DATA_FRAGMENT,\n  CART_SUMMARY_FRAGMENT,\n} from '@/checkout/api/getCheckoutData/graphql/getCheckoutData.graphql';\n\nexport const setGuestEmailMutation = /* GraphQL */ `\n  mutation setGuestEmail($cartId: String!, $email: String!) {\n    setGuestEmailOnCart(input: { cart_id: $cartId, email: $email }) {\n      cart {\n        id\n        ...CheckoutData\n        ...CartSummaryItems\n      }\n    }\n  }\n  ${CHECKOUT_DATA_FRAGMENT}\n  ${CART_SUMMARY_FRAGMENT}\n`;\n","import { MissingCart } from '@/checkout/api/errors';\nimport { setGuestEmailMutation } from '@/checkout/api/setGuestEmailOnCart/graphql/setGuestEmailOnCart.graphql';\nimport { dispatchApiCall } from '@/checkout/api/utils/dispatchApiCall';\nimport { transformCart } from '@/checkout/data/transforms/index';\n\nexport type SetGuestEmailOnCartInput = {\n  cartId: string;\n  email: string;\n};\n\nexport const setGuestEmailOnCart = async ({\n  cartId,\n  email,\n}: SetGuestEmailOnCartInput) => {\n  if (!cartId) throw new MissingCart();\n\n  return await dispatchApiCall({\n    type: 'mutation',\n    query: setGuestEmailMutation,\n    options: { variables: { cartId, email } },\n    path: 'setGuestEmailOnCart.cart',\n    signalType: 'cart',\n    transformer: transformCart,\n  });\n};\n"],"names":["transformEmailAvailability","data","Boolean","is_email_available","isEmailAvailableQuery","isEmailAvailable","email","MissingEmail","errors","fetchGraphQl","method","cache","variables","catch","handleNetworkError","handleFetchErrors","setGuestEmailMutation","CHECKOUT_DATA_FRAGMENT","CART_SUMMARY_FRAGMENT","setGuestEmailOnCart","cartId","MissingCart","dispatchApiCall","type","query","options","path","signalType","transformer","transformCart"],"mappings":";;;;AAGA,MAAMA,6BAA6BA,CACjCC,SACsB;AACfC,SAAAA,QAAQD,6BAAME,kBAAkB;AACzC;ACPaC,MAAAA;AAAAA;AAAAA,EAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACStCC,MAAAA,mBAAmB,OAC9BC,UAC+B;AAC/B,MAAI,CAACA;AAAO,UAAM,IAAIC,aAAa;AAE7B,QAAA;AAAA,IAAEN;AAAAA,IAAMO;AAAAA,EAAAA,IAAW,MAAMC,aAC7BL,uBACA;AAAA,IACEM,QAAQ;AAAA,IACRC,OAAO;AAAA,IACPC,WAAW;AAAA,MAAEN;AAAAA,IAAM;AAAA,EAAA,CAEvB,EAAEO,MAAMC,kBAAkB;AAEtBN,MAAAA;AAAQO,sBAAkBP,MAAM;AAE7BR,SAAAA,2BAA2BC,KAAKI,gBAAgB;AACzD;ACrBaW,MAAAA;AAAAA;AAAAA,EAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUhDC,sBAAuB;AAAA,IACvBC,qBAAsB;AAAA;AAAA;ACNnB,MAAMC,sBAAsB,OAAO;AAAA,EACxCC;AAAAA,EACAd;AACwB,MAAM;AAC9B,MAAI,CAACc;AAAQ,UAAM,IAAIC,YAAY;AAEnC,SAAO,MAAMC,gBAAgB;AAAA,IAC3BC,MAAM;AAAA,IACNC,OAAOR;AAAAA,IACPS,SAAS;AAAA,MAAEb,WAAW;AAAA,QAAEQ;AAAAA,QAAQd;AAAAA,MAAM;AAAA,IAAE;AAAA,IACxCoB,MAAM;AAAA,IACNC,YAAY;AAAA,IACZC,aAAaC;AAAAA,EAAAA,CACd;AACH;"}