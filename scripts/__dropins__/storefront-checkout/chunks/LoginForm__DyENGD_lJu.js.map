{"version":3,"file":"LoginForm__DyENGD_lJu.js","sources":["../../src/components/LoginForm/Email.tsx","../../src/components/LoginForm/SignIn.tsx","../../src/components/LoginForm/LoginForm.tsx","../../src/containers/LoginForm/LoginForm.tsx"],"sourcesContent":["import { Field, Input } from '@adobe/elsie/components';\nimport { useText } from '@adobe/elsie/i18n';\nimport { HTMLAttributes } from 'preact/compat';\nimport { FunctionComponent } from 'preact';\n\nexport interface LoginEmailProps extends HTMLAttributes<HTMLFormElement> {\n  value?: string;\n  error?: string;\n  hint?: string;\n  onChange: (e: any) => void;\n  onBlur: (e: any) => void;\n  onInvalid: (e: any) => void;\n}\n\nexport const Email: FunctionComponent<LoginEmailProps> = ({\n  value,\n  error,\n  hint,\n  onChange,\n  onBlur,\n  onInvalid,\n}) => {\n  const translations = useText({\n    LoginFormLabel: 'Checkout.LoginForm.ariaLabel',\n    LoginFormFloatingLabel: 'Checkout.LoginForm.floatingLabel',\n    LoginFormPlaceholder: 'Checkout.LoginForm.placeholder',\n  });\n\n  return (\n    <Field size=\"medium\" error={error} hint={hint}>\n      <Input\n        id=\"customer-email\"\n        name=\"userName\"\n        type=\"email\"\n        value={value}\n        autocomplete=\"email\"\n        placeholder={translations.LoginFormPlaceholder}\n        floatingLabel={translations.LoginFormFloatingLabel}\n        onChange={onChange}\n        onBlur={onBlur}\n        onInvalid={onInvalid}\n        required={true}\n        aria-label={translations.LoginFormLabel}\n        aria-required={true}\n      />\n    </Field>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Text } from '@adobe/elsie/i18n';\n\nexport interface LoginSignInProps {}\n\nexport const SignIn: FunctionComponent<LoginSignInProps> = () => {\n  return (\n    <p className=\"checkout-login-form__signIn\">\n      <Text id=\"Checkout.LoginForm.account\" />\n\n      <a\n        className=\"checkout-login-form__link\"\n        href=\"#\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <Text id=\"Checkout.LoginForm.signIn\" />\n      </a>\n    </p>\n  );\n};\n","import { Email, Heading, SignIn } from '@/checkout/components';\nimport '@/checkout/components/LoginForm/LoginForm.css';\nimport { useText } from '@adobe/elsie/i18n';\nimport { classes } from '@adobe/elsie/lib';\nimport { FunctionComponent, HTMLAttributes } from 'preact/compat';\n\nexport interface LoginFormProps extends HTMLAttributes<HTMLDivElement> {\n  currentEmail?: string | null;\n  hint?: string;\n  error?: string | null;\n  onEmailChange: (e: any) => void;\n  onEmailBlur: (e: any) => void;\n  onEmailInvalid: (e: any) => void;\n}\n\nexport const LoginForm: FunctionComponent<LoginFormProps> = ({\n  name,\n  className,\n  currentEmail,\n  hint,\n  error = null,\n  onEmailChange,\n  onEmailBlur,\n  onEmailInvalid,\n  ...props\n}) => {\n  const translations = useText({\n    Title: 'Checkout.LoginForm.title',\n  });\n\n  return (\n    <div {...props} className={classes(['checkout-login-form', className])}>\n      <div className=\"checkout-login-form__heading\">\n        <Heading level={2} className=\"checkout-login-form__title\">\n          {translations.Title}\n        </Heading>\n        <SignIn />\n      </div>\n      <div className=\"checkout-login-form__content\">\n        <form\n          className={classes(['dropin-login-form__form', className])}\n          name={name}\n          noValidate\n        >\n          {/* Prevent 'Enter' key press from submitting this form. */}\n          <button\n            type=\"submit\"\n            disabled\n            style=\"display: none\"\n            aria-hidden=\"true\"\n          />\n          <Email\n            value={currentEmail || undefined}\n            error={error || ''}\n            hint={hint}\n            onChange={onEmailChange}\n            onBlur={onEmailBlur}\n            onInvalid={onEmailInvalid}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n","import { isEmailAvailable, setGuestEmailOnCart } from '@/checkout/api';\nimport { LoginForm as LoginFormComponent } from '@/checkout/components/LoginForm';\nimport { useText } from '@adobe/elsie/i18n';\nimport { HTMLAttributes } from 'preact/compat';\nimport { useEffect, useState } from 'preact/hooks';\nimport { LOGIN_FORM_NAME } from './constants';\nimport { cartSignal } from '@/checkout/signals';\nimport { FunctionComponent } from 'preact';\n\nexport interface LoginFormProps extends HTMLAttributes<HTMLDivElement> {\n  email?: string;\n}\n\nconst DEBOUNCE_TIME = 1000;\n\nexport const LoginForm: FunctionComponent<LoginFormProps> = ({\n  className,\n  email = null,\n  ...props\n}) => {\n  const translations = useText({\n    LoginFormInvalidEmailError: 'Checkout.LoginForm.invalidEmailError',\n    LoginFormMissingEmailError: 'Checkout.LoginForm.missingEmailError',\n    LoginFormEmailExists: 'Checkout.LoginForm.emailExists',\n  });\n\n  const { data: cartData } = cartSignal.value;\n  const cartId = cartData?.id || '';\n  const hasCartData = !!cartData;\n\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [currentEmail, setCurrentEmail] = useState<string | null>(email);\n  const [error, setError] = useState<string | null>();\n  const [emailAvailability, setEmailAvailability] = useState<boolean>(true);\n\n  const errorMessage = (validity: ValidityState): string | null => {\n    if (validity.valid) return null;\n    if (validity.valueMissing) return translations.LoginFormMissingEmailError;\n    return translations.LoginFormInvalidEmailError;\n  };\n\n  const onEmailChange = (e: any) => {\n    const { value } = e.target as HTMLInputElement;\n    setCurrentEmail(value);\n    setError(null);\n    setEmailAvailability(true);\n  };\n\n  const onEmailBlur = (e: any) => {\n    const { validity } = e.target as HTMLInputElement;\n    setError(errorMessage(validity));\n  };\n\n  const onEmailInvalid = (e: any) => {\n    const { validity } = e.target as HTMLInputElement;\n    setError(errorMessage(validity));\n  };\n\n  if (!isInitialized && hasCartData) {\n    setIsInitialized(true);\n    setCurrentEmail(cartData?.email || email);\n  }\n\n  useEffect(() => {\n    if (!currentEmail || error || cartData?.email === currentEmail) return;\n\n    const timer = setTimeout(() => {\n      isEmailAvailable(currentEmail)\n        .then((result) => {\n          setEmailAvailability(result);\n\n          setGuestEmailOnCart({\n            cartId,\n            email: currentEmail,\n          }).catch((e: any) => {\n            console.log('set email failed', e);\n          });\n        })\n        .catch((e: any) => {\n          // TODO: handle error state\n          console.log(e);\n          setError(translations.LoginFormInvalidEmailError);\n          setEmailAvailability(true);\n        });\n    }, DEBOUNCE_TIME);\n\n    return () => {\n      timer && clearTimeout(timer);\n    };\n  }, [\n    currentEmail,\n    error,\n    translations.LoginFormInvalidEmailError,\n    cartData?.email,\n    cartId,\n  ]);\n\n  return (\n    <LoginFormComponent\n      className={className}\n      currentEmail={currentEmail}\n      error={error}\n      hint={emailAvailability ? '' : translations.LoginFormEmailExists}\n      name={LOGIN_FORM_NAME}\n      onEmailBlur={onEmailBlur}\n      onEmailChange={onEmailChange}\n      onEmailInvalid={onEmailInvalid}\n      {...props}\n    />\n  );\n};\n"],"names":["Email","value","error","hint","onChange","onBlur","onInvalid","translations","useText","LoginFormLabel","LoginFormFloatingLabel","LoginFormPlaceholder","_jsx","Field","size","children","Input","id","name","type","autocomplete","placeholder","floatingLabel","required","SignIn","_jsxs","className","Text","href","target","rel","LoginForm","currentEmail","onEmailChange","onEmailBlur","onEmailInvalid","props","Title","classes","Heading","level","noValidate","disabled","style","undefined","DEBOUNCE_TIME","email","LoginFormInvalidEmailError","LoginFormMissingEmailError","LoginFormEmailExists","data","cartData","cartSignal","cartId","hasCartData","isInitialized","setIsInitialized","useState","setCurrentEmail","setError","emailAvailability","setEmailAvailability","errorMessage","validity","valid","valueMissing","e","useEffect","timer","setTimeout","then","result","catch","log","console","clearTimeout","LoginFormComponent","LOGIN_FORM_NAME"],"mappings":";;;;;;;;;;;;AAcO,MAAMA,QAA4CA,CAAC;AAAA,EACxDC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACAC;AACF,MAAM;AACJ,QAAMC,eAAeC,QAAQ;AAAA,IAC3BC,gBAAgB;AAAA,IAChBC,wBAAwB;AAAA,IACxBC,sBAAsB;AAAA,EAAA,CACvB;AAED,SACEC,IAACC,OAAK;AAAA,IAACC,MAAK;AAAA,IAASZ;AAAAA,IAAcC;AAAAA,IAAWY,UAC5CH,IAACI,OAAK;AAAA,MACJC,IAAG;AAAA,MACHC,MAAK;AAAA,MACLC,MAAK;AAAA,MACLlB;AAAAA,MACAmB,cAAa;AAAA,MACbC,aAAad,aAAaI;AAAAA,MAC1BW,eAAef,aAAaG;AAAAA,MAC5BN;AAAAA,MACAC;AAAAA,MACAC;AAAAA,MACAiB,UAAU;AAAA,MACV,cAAYhB,aAAaE;AAAAA,MACzB,iBAAe;AAAA,IAAA,CAChB;AAAA,EAAA,CACI;AAEX;AC1CO,MAAMe,SAA8CA,MAAM;AAC/D,SACEC,KAAA,KAAA;AAAA,IAAGC,WAAU;AAAA,IAA6BX,UAAA,CACxCH,IAACe,MAAI;AAAA,MAACV,IAAG;AAAA,IAAA,CAA8B,GAEvCL,IAAA,KAAA;AAAA,MACEc,WAAU;AAAA,MACVE,MAAK;AAAA,MACLC,QAAO;AAAA,MACPC,KAAI;AAAA,MAAYf,UAEhBH,IAACe,MAAI;AAAA,QAACV,IAAG;AAAA,MAAA,CAA6B;AAAA,IAAA,CACrC,CAAC;AAAA,EAAA,CACH;AAEP;ACLO,MAAMc,cAA+CA,CAAC;AAAA,EAC3Db;AAAAA,EACAQ;AAAAA,EACAM;AAAAA,EACA7B;AAAAA,EACAD,QAAQ;AAAA,EACR+B;AAAAA,EACAC;AAAAA,EACAC;AAAAA,EACA,GAAGC;AACL,MAAM;AACJ,QAAM7B,eAAeC,QAAQ;AAAA,IAC3B6B,OAAO;AAAA,EAAA,CACR;AAED,SACEZ,KAAA,OAAA;AAAA,IAAA,GAASW;AAAAA,IAAOV,WAAWY,QAAQ,CAAC,uBAAuBZ,SAAS,CAAC;AAAA,IAAEX,WACrEU,KAAA,OAAA;AAAA,MAAKC,WAAU;AAAA,MAA8BX,UAAA,CAC3CH,IAAC2B,SAAO;AAAA,QAACC,OAAO;AAAA,QAAGd,WAAU;AAAA,QAA4BX,UACtDR,aAAa8B;AAAAA,MACP,CAAA,GACTzB,IAACY,UAAQ,CAAC;AAAA,IAAA,CACP,GACLZ,IAAA,OAAA;AAAA,MAAKc,WAAU;AAAA,MAA8BX,UAC3CU,KAAA,QAAA;AAAA,QACEC,WAAWY,QAAQ,CAAC,2BAA2BZ,SAAS,CAAC;AAAA,QACzDR;AAAAA,QACAuB,YAAU;AAAA,QAAA1B,WAGVH,IAAA,UAAA;AAAA,UACEO,MAAK;AAAA,UACLuB,UAAQ;AAAA,UACRC,OAAM;AAAA,UACN,eAAY;AAAA,QAAA,CACb,GACD/B,IAACZ,OAAK;AAAA,UACJC,OAAO+B,gBAAgBY;AAAAA,UACvB1C,OAAOA,SAAS;AAAA,UAChBC;AAAAA,UACAC,UAAU6B;AAAAA,UACV5B,QAAQ6B;AAAAA,UACR5B,WAAW6B;AAAAA,QAAAA,CACZ,CAAC;AAAA,MAAA,CACE;AAAA,IAAA,CACH,CAAC;AAAA,EAAA,CACH;AAET;AClDA,MAAMU,gBAAgB;AAEf,MAAMd,YAA+CA,CAAC;AAAA,EAC3DL;AAAAA,EACAoB,QAAQ;AAAA,EACR,GAAGV;AACL,MAAM;AACJ,QAAM7B,eAAeC,QAAQ;AAAA,IAC3BuC,4BAA4B;AAAA,IAC5BC,4BAA4B;AAAA,IAC5BC,sBAAsB;AAAA,EAAA,CACvB;AAEK,QAAA;AAAA,IAAEC,MAAMC;AAAAA,EAAAA,IAAaC,WAAWnD;AAChCoD,QAAAA,UAASF,qCAAUlC,OAAM;AACzBqC,QAAAA,cAAc,CAAC,CAACH;AAEtB,QAAM,CAACI,eAAeC,gBAAgB,IAAIC,SAAS,KAAK;AACxD,QAAM,CAACzB,cAAc0B,eAAe,IAAID,SAAwBX,KAAK;AACrE,QAAM,CAAC5C,OAAOyD,QAAQ,IAAIF,SAAwB;AAClD,QAAM,CAACG,mBAAmBC,oBAAoB,IAAIJ,SAAkB,IAAI;AAElEK,QAAAA,eAAeA,CAACC,aAA2C;AAC/D,QAAIA,SAASC;AAAc,aAAA;AAC3B,QAAID,SAASE;AAAc,aAAO1D,aAAayC;AAC/C,WAAOzC,aAAawC;AAAAA,EAAAA;AAGhBd,QAAAA,gBAAgBA,CAACiC,MAAW;AAC1B,UAAA;AAAA,MAAEjE;AAAAA,IAAAA,IAAUiE,EAAErC;AACpB6B,oBAAgBzD,KAAK;AACrB0D,aAAS,IAAI;AACbE,yBAAqB,IAAI;AAAA,EAAA;AAGrB3B,QAAAA,cAAcA,CAACgC,MAAW;AACxB,UAAA;AAAA,MAAEH;AAAAA,IAAAA,IAAaG,EAAErC;AACdiC,aAAAA,aAAaC,QAAQ,CAAC;AAAA,EAAA;AAG3B5B,QAAAA,iBAAiBA,CAAC+B,MAAW;AAC3B,UAAA;AAAA,MAAEH;AAAAA,IAAAA,IAAaG,EAAErC;AACdiC,aAAAA,aAAaC,QAAQ,CAAC;AAAA,EAAA;AAG7B,MAAA,CAACR,iBAAiBD,aAAa;AACjCE,qBAAiB,IAAI;AACLL,qBAAAA,qCAAUL,UAASA,KAAK;AAAA,EAC1C;AAEAqB,YAAU,MAAM;AACd,QAAI,CAACnC,gBAAgB9B,UAASiD,qCAAUL,WAAUd;AAAc;AAE1DoC,UAAAA,QAAQC,WAAW,MAAM;AACZrC,uBAAAA,YAAY,EAC1BsC,KAAMC,CAAW,WAAA;AAChBV,6BAAqBU,MAAM;AAEP,4BAAA;AAAA,UAClBlB;AAAAA,UACAP,OAAOd;AAAAA,QAAAA,CACR,EAAEwC,MAAM,CAACN,MAAW;AACXO,kBAAAA,IAAI,oBAAoBP,CAAC;AAAA,QAAA,CAClC;AAAA,MAAA,CACF,EACAM,MAAM,CAACN,MAAW;AAEjBQ,gBAAQD,IAAIP,CAAC;AACbP,iBAASpD,aAAawC,0BAA0B;AAChDc,6BAAqB,IAAI;AAAA,MAAA,CAC1B;AAAA,OACFhB,aAAa;AAEhB,WAAO,MAAM;AACXuB,eAASO,aAAaP,KAAK;AAAA,IAAA;AAAA,EAC7B,GACC,CACDpC,cACA9B,OACAK,aAAawC,4BACbI,qCAAUL,OACVO,MAAM,CACP;AAED,SACEzC,IAACgE,aAAkB;AAAA,IACjBlD;AAAAA,IACAM;AAAAA,IACA9B;AAAAA,IACAC,MAAMyD,oBAAoB,KAAKrD,aAAa0C;AAAAA,IAC5C/B,MAAM2D;AAAAA,IACN3C;AAAAA,IACAD;AAAAA,IACAE;AAAAA,IAA+B,GAC3BC;AAAAA,EAAAA,CACL;AAEL;"}