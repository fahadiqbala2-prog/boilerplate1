{"version":3,"file":"setBillingAddress__YjJxZ6C51q.js","sources":["../../src/api/setBillingAddress/graphql/setBillingAddress.graphql.ts","../../src/api/setBillingAddress/setBillingAddress.ts"],"sourcesContent":["import {\n  CHECKOUT_DATA_FRAGMENT,\n  CART_SUMMARY_FRAGMENT,\n} from '@/checkout/api/getCheckoutData/graphql/getCheckoutData.graphql';\n\nexport const setBillingAddressMutation = /* GraphQL */ `\n  mutation setBillingAddress(\n    $cartId: String!\n    $input: BillingAddressInput!\n  ) {\n    setBillingAddressOnCart(\n      input: { cart_id: $cartId, billing_address: $input }\n    ) {\n      cart {\n        id\n        ...CheckoutData\n        ...CartSummaryItems\n      }\n    }\n  }\n  ${CHECKOUT_DATA_FRAGMENT}\n  ${CART_SUMMARY_FRAGMENT}\n`;\n","import { MissingBillingAddress, MissingCart } from '@/checkout/api/errors';\nimport { setBillingAddressMutation } from '@/checkout/api/setBillingAddress/graphql/setBillingAddress.graphql';\nimport { dispatchApiCall } from '@/checkout/api/utils/dispatchApiCall';\nimport { transformCart } from '@/checkout/data/transforms/index';\n\nexport interface BillingAddressInput {\n  address?: {\n    city: string;\n    company?: string;\n    country_code: string;\n    custom_attributes?: {\n      attribute_code: string;\n      value?: string;\n      selected_options?: { uid: string; value: string }[];\n    }[];\n    firstname: string;\n    lastname: string;\n    postcode?: string;\n    region?: string;\n    region_id?: number;\n    save_in_address_book?: boolean;\n    street: string[];\n    telephone?: string;\n    vat_id?: string;\n  };\n  customer_address_id?: number;\n  same_as_shipping?: boolean;\n  use_for_shipping?: boolean;\n}\n\nexport const setBillingAddress = async ({\n  signal,\n  cartId,\n  input,\n}: {\n  signal?: AbortSignal;\n  cartId: string;\n  input: BillingAddressInput;\n}) => {\n  const { address, same_as_shipping } = input;\n\n  if (!cartId) throw new MissingCart();\n  if (!same_as_shipping && !address) throw new MissingBillingAddress();\n\n  return await dispatchApiCall({\n    type: 'mutation',\n    query: setBillingAddressMutation,\n    options: { signal, variables: { cartId, input } },\n    path: 'setBillingAddressOnCart.cart',\n    signalType: 'cart',\n    transformer: transformCart,\n  });\n};\n"],"names":["setBillingAddressMutation","CHECKOUT_DATA_FRAGMENT","CART_SUMMARY_FRAGMENT","setBillingAddress","signal","cartId","input","address","same_as_shipping","MissingCart","MissingBillingAddress","dispatchApiCall","type","query","options","variables","path","signalType","transformer","transformCart"],"mappings":";;;AAKaA,MAAAA;AAAAA;AAAAA,EAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAepDC,sBAAuB;AAAA,IACvBC,qBAAsB;AAAA;AAAA;ACSnB,MAAMC,oBAAoB,OAAO;AAAA,EACtCC;AAAAA,EACAC;AAAAA,EACAC;AAKF,MAAM;AACE,QAAA;AAAA,IAAEC;AAAAA,IAASC;AAAAA,EAAqBF,IAAAA;AAEtC,MAAI,CAACD;AAAQ,UAAM,IAAII,YAAY;AAC/B,MAAA,CAACD,oBAAoB,CAACD;AAAS,UAAM,IAAIG,sBAAsB;AAEnE,SAAO,MAAMC,gBAAgB;AAAA,IAC3BC,MAAM;AAAA,IACNC,OAAOb;AAAAA,IACPc,SAAS;AAAA,MAAEV;AAAAA,MAAQW,WAAW;AAAA,QAAEV;AAAAA,QAAQC;AAAAA,MAAM;AAAA,IAAE;AAAA,IAChDU,MAAM;AAAA,IACNC,YAAY;AAAA,IACZC,aAAaC;AAAAA,EAAAA,CACd;AACH;"}