{"version":3,"file":"ShippingMethods__DPKGuBtCF-.js","sources":["../../../ElsieSDK/packages/elsie/src/icons/Delivery.svg","../../src/components/ShippingMethods/ShippingMethods.tsx","../../src/components/ShippingMethods/ShippingMethodsSkeleton.tsx","../../src/utils/shippingMethods/isEqual.ts","../../src/containers/ShippingMethods/ShippingMethods.tsx"],"sourcesContent":["import * as React from \"react\";\nconst SvgDelivery = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M2.47266 4.90002H15.1851V10.9645H21.2495L23 12.715V17.6124H20.073\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M15.1758 5.87573H19.0019L21.0394 10.7636\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M9.76151 16.7898C9.76151 18.0525 8.72845 19.076 7.46582 19.076C6.20318 19.076 5.17969 18.0429 5.17969 16.7803C5.17969 15.5176 6.20318 14.4941 7.46582 14.4941C8.72845 14.4941 9.75195 15.5176 9.76151 16.7803C9.76151 16.7803 9.76151 16.7803 9.76151 16.7898Z\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M19.8726 16.7898C19.8726 18.062 18.8491 19.0855 17.5769 19.0855C16.3047 19.0855 15.2812 18.062 15.2812 16.7898C15.2812 15.5176 16.3047 14.4941 17.5769 14.4941C18.8491 14.4941 19.8726 15.5176 19.8726 16.7898Z\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M8.08792 7.63574H1.69824\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M7.11229 10.3619H1\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M5.16084 13.0402H1.92773\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M9.76172 16.7611H15.2809\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M2.38672 16.7611H5.17025\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgDelivery;\n","import { classes } from '@adobe/elsie/lib';\nimport '@/checkout/components/ShippingMethods/ShippingMethods.css';\nimport {\n  Icon,\n  IllustratedMessage,\n  Price,\n  ProgressSpinner,\n  RadioButton,\n} from '@adobe/elsie/components';\nimport { useText } from '@adobe/elsie/i18n';\nimport { Delivery } from '@adobe/elsie/icons';\nimport { Heading } from '@/checkout/components';\nimport { ShippingMethodsSkeleton } from '@/checkout/components/ShippingMethods';\nimport { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { ShippingMethod } from '@/checkout/data/models';\n\nexport interface ShippingMethodsProps extends HTMLAttributes<HTMLDivElement> {\n  isLoading?: boolean;\n  onSelectionChange?: (method: ShippingMethod) => void;\n  options?: ShippingMethod[];\n  selection?: ShippingMethod;\n}\n\nexport const ShippingMethods: FunctionComponent<ShippingMethodsProps> = ({\n  className,\n  isLoading = false,\n  onSelectionChange = () => {},\n  options,\n  selection,\n  ...props\n}) => {\n  const dictionary = useText({\n    Title: 'Checkout.ShippingMethods.title',\n    EmptyState: 'Checkout.ShippingMethods.emptyState',\n  });\n\n  if (options === undefined) return <ShippingMethodsSkeleton />;\n\n  return (\n    <div\n      {...props}\n      className={classes(['checkout-shipping-methods', className])}\n    >\n      <Heading level={3} className=\"checkout-shipping-methods__title\">\n        {dictionary.Title}\n      </Heading>\n\n      {!isLoading && options.length === 0 && (\n        <IllustratedMessage\n          icon={<Icon source={Delivery} />}\n          message={<p>{dictionary.EmptyState}</p>}\n        />\n      )}\n\n      <div className={classes(['checkout-shipping-methods__content'])}>\n        {isLoading && (\n          <ProgressSpinner className=\"checkout-shipping-methods__spinner\" />\n        )}\n\n        <div\n          className={classes([\n            'checkout-shipping-methods__options',\n            ['checkout-shipping-methods__options--loading', isLoading],\n          ])}\n        >\n          {options.map((method: ShippingMethod) => {\n            return (\n              <RadioButton\n                data-testid=\"shipping-method-radiobutton\"\n                aria-busy={isLoading}\n                id={method.value}\n                key={method.value}\n                name=\"shipping-method\"\n                className=\"checkout-shipping-methods__method\"\n                label={\n                  <>\n                    <Price\n                      amount={method.amount.value}\n                      currency={method.amount.currency}\n                    />\n                    &nbsp;\n                    <span>{method.carrier.title}</span>\n                  </>\n                }\n                description={method.title}\n                value={method.value}\n                checked={selection?.value === method.value}\n                onChange={() => onSelectionChange(method)}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const ShippingMethodsSkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton data-testid=\"shipping-methods-skeleton\">\n      <SkeletonRow variant=\"heading\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow size=\"medium\" fullWidth={true} />\n      <SkeletonRow size=\"medium\" fullWidth={true} />\n    </Skeleton>\n  );\n};\n","import { ShippingMethod } from '@/checkout/data/models';\n\nexport const isEqual = (a: ShippingMethod, b: ShippingMethod) => {\n  return a.code === b.code && a.carrier.code === b.carrier.code;\n};\n","import {\n  estimateShippingMethods,\n  setShippingMethodsOnCart,\n} from '@/checkout/api';\nimport { ShippingMethods as ShippingMethodsList } from '@/checkout/components/ShippingMethods';\nimport { PreselectedShippingMethod } from '@/checkout/containers/Checkout';\nimport { useStore } from '@/checkout/context/store';\nimport { ShippingMethod } from '@/checkout/data/models';\nimport {\n  cartSignal,\n  estimateShippingMethodsSignal,\n  regionsSignal,\n} from '@/checkout/signals';\nimport { selectedShippingMethodSignal } from '@/checkout/signals/SelectedShippingMethodSignal';\nimport { isEqual } from '@/checkout/utils/shippingMethods';\nimport { Container } from '@adobe/elsie/lib';\nimport { HTMLAttributes, useCallback, useEffect, useMemo } from 'preact/compat';\n\nexport interface ShippingMethodsProps extends HTMLAttributes<HTMLDivElement> {\n  preSelectedMethod?: PreselectedShippingMethod;\n}\n\nfunction useShippingMethods(preselectedMethod?: PreselectedShippingMethod) {\n  const store = useStore();\n  const config = store.config;\n  const isLoadingConfig = !config;\n\n  const cart = cartSignal.value.data;\n  const isLoadingCart = cartSignal.value.pending;\n  const estimationShippingMethods = estimateShippingMethodsSignal.value.data;\n  const isLoadingEstimation = estimateShippingMethodsSignal.value.pending;\n  const localShippingSelection = selectedShippingMethodSignal.value;\n\n  const cartId = cart?.id;\n  const cartShippingAddresses = cart?.shippingAddresses;\n  const primaryAddress = cartShippingAddresses?.[0];\n  const isAbleToSetShippingMethod = !!primaryAddress;\n  const cartShippingMethods = primaryAddress?.availableShippingMethods;\n  const cartShippingSelection = primaryAddress?.selectedShippingMethod;\n\n  const shippingOptions = cartShippingMethods || estimationShippingMethods;\n\n  const setShippingMethodOnCart = useCallback(\n    (method: ShippingMethod) => {\n      if (!cartId || !isAbleToSetShippingMethod) return;\n\n      const partialMethod = {\n        method_code: method.code,\n        carrier_code: method.carrier.code,\n      };\n\n      setShippingMethodsOnCart({\n        cartId,\n        shippingMethods: [partialMethod],\n      }).catch((error) => {\n        console.error('setting shipping methods on cart failed:', error);\n      });\n    },\n    [cartId, isAbleToSetShippingMethod]\n  );\n\n  const onSelectionChange = (method: ShippingMethod) => {\n    selectedShippingMethodSignal.value = method;\n  };\n\n  /**\n   * This memo is responsible for determining the selected shipping method\n   * based on the current state of the cart and the available shipping methods.\n   */\n  const selectedShippingOption: ShippingMethod | undefined = useMemo(() => {\n    if (!shippingOptions?.length) return;\n\n    const fallbackShippingOption = shippingOptions[0];\n    const selection = localShippingSelection || cartShippingSelection;\n\n    if (!selection) {\n      const preselection = shippingOptions.find((method) => {\n        return (\n          method.carrier.code === preselectedMethod?.carrierCode &&\n          method.code === preselectedMethod?.methodCode\n        );\n      });\n\n      return preselection || fallbackShippingOption;\n    }\n\n    const isAvailable = shippingOptions.some((method) =>\n      isEqual(method, selection)\n    );\n\n    return isAvailable ? selection : fallbackShippingOption;\n  }, [\n    localShippingSelection,\n    cartShippingSelection,\n    shippingOptions,\n    preselectedMethod,\n  ]);\n\n  /**\n   * This effect is responsible for syncing the local and cart state with the current selection.\n\n   * - Initialize the local selection with the data from the cart when needed.\n   * - Initialize the local selection and sync the cart when using the first available method.\n   * - If the cart gets out of sync, update the cart with the local selection.\n   */\n  useEffect(() => {\n    if (!selectedShippingOption) return;\n\n    if (\n      !localShippingSelection ||\n      !isEqual(selectedShippingOption, localShippingSelection)\n    ) {\n      selectedShippingMethodSignal.value = selectedShippingOption;\n    }\n\n    if (\n      !cartShippingSelection ||\n      !isEqual(selectedShippingOption, cartShippingSelection)\n    ) {\n      setShippingMethodOnCart(selectedShippingOption);\n    }\n  }, [\n    selectedShippingOption,\n    localShippingSelection,\n    cartShippingSelection,\n    setShippingMethodOnCart,\n  ]);\n\n  /**\n   * This effect is responsible for triggering the shipping methods estimation.\n   *\n   * - Only triggers if there is cart data and no available shipping methods.\n   * - Builds the estimate shipping search fields using the current region data or defaults.\n   * - Calls the estimateShipping function with the cartId and search fields.\n   */\n  useEffect(() => {\n    if (!cartId || cartShippingMethods) return;\n\n    const {\n      country: regionCountry,\n      selectedRegion,\n      selectedRegionId,\n    } = regionsSignal.value;\n\n    const country = regionCountry || config?.defaultCountry;\n\n    if (country) {\n      const criteria = {\n        country_code: country,\n        region_name: selectedRegion,\n        region_id: selectedRegionId,\n      };\n\n      estimateShippingMethods({ cartId, criteria }).catch((error: any) => {\n        estimateShippingMethodsSignal.value = { pending: false, data: [] };\n        console.error('shipping methods estimation failed:', error);\n      });\n    }\n  }, [cartId, cartShippingMethods, config]);\n\n  return {\n    isLoading: isLoadingCart || isLoadingConfig || isLoadingEstimation,\n    options: shippingOptions,\n    selection: selectedShippingOption,\n    onSelectionChange,\n  };\n}\n\nexport const ShippingMethods: Container<ShippingMethodsProps> = ({\n  preSelectedMethod,\n  ...props\n}) => {\n  const { isLoading, options, selection, onSelectionChange } =\n    useShippingMethods(preSelectedMethod);\n\n  return (\n    <ShippingMethodsList\n      {...props}\n      className=\"checkout-shipping-methods\"\n      isLoading={isLoading}\n      onSelectionChange={onSelectionChange}\n      options={options}\n      selection={selection}\n    />\n  );\n};\n"],"names":["ShippingMethods","className","isLoading","onSelectionChange","options","selection","props","dictionary","useText","Title","EmptyState","undefined","_jsx","ShippingMethodsSkeleton","_jsxs","classes","children","Heading","level","length","IllustratedMessage","icon","Icon","source","Delivery","message","ProgressSpinner","map","method","RadioButton","id","value","name","label","_Fragment","Price","amount","currency","carrier","title","description","checked","onChange","Skeleton","SkeletonRow","variant","size","fullWidth","isEqual","a","b","code","useShippingMethods","preselectedMethod","store","useStore","config","isLoadingConfig","cart","cartSignal","data","isLoadingCart","pending","estimationShippingMethods","estimateShippingMethodsSignal","isLoadingEstimation","localShippingSelection","selectedShippingMethodSignal","cartId","cartShippingAddresses","shippingAddresses","primaryAddress","isAbleToSetShippingMethod","cartShippingMethods","availableShippingMethods","cartShippingSelection","selectedShippingMethod","shippingOptions","setShippingMethodOnCart","useCallback","partialMethod","method_code","carrier_code","shippingMethods","catch","error","selectedShippingOption","useMemo","fallbackShippingOption","preselection","find","carrierCode","methodCode","isAvailable","some","useEffect","country","regionCountry","selectedRegion","selectedRegionId","regionsSignal","defaultCountry","criteria","country_code","region_name","region_id","preSelectedMethod","ShippingMethodsList"],"mappings":"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"}