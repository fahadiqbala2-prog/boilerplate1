{"version":3,"file":"ProgressSpinner.js","sources":["../../src/components/ProgressSpinner/ProgressSpinner.tsx"],"sourcesContent":["import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { useText } from '@adobe/elsie/i18n';\nimport { classes } from '@adobe/elsie/lib';\n\nimport '@adobe/elsie/components/ProgressSpinner/ProgressSpinner.css';\n\n/**\n * @param size this is the size of the spinner ranging in [12px, 24px, 36px, 48px]\n * @param stroke this is the stroke of the spinner ranging in [1px, 2px, 3px, 4px]\n */\nexport interface ProgressSpinnerProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'size'> {\n  ariaLabel?: string;\n  size?: 'small' | 'medium' | 'big' | 'large';\n  stroke?: '1' | '2' | '3' | '4';\n}\n\nexport const ProgressSpinner: FunctionComponent<ProgressSpinnerProps> = ({\n  ariaLabel,\n  size = 'small',\n  stroke = '4',\n  children,\n  className,\n  style,\n  ...props\n}) => {\n  const commonClasses = [\n    'dropin-progress-spinner',\n    `dropin-progress-spinner--shape-size-${size}`,\n    `dropin-progress-spinner--shape-stroke-${stroke}`,\n  ];\n\n  const translations = useText({\n    updating: 'Dropin.ProgressSpinner.updating.label',\n    updatingChildren: 'Dropin.ProgressSpinner.updatingChildren.label',\n  });\n\n  const handleAriaLabel = () => {\n    if (ariaLabel) return ariaLabel;\n    return children ? translations.updatingChildren : translations.updating;\n  };\n\n  return children ? (\n    // if we provide children to this component, it should act as a provider in order to add background with low opacity\n    <div\n      {...props}\n      className={classes(['dropin-progress-spinner-provider'])}\n      aria-live=\"polite\"\n      role=\"status\"\n    >\n      <div aria-hidden={true}>{children}</div>\n      <div\n        aria-label={handleAriaLabel()}\n        role=\"status\"\n        className={classes(['dropin-progress-spinner-background', className])}\n        style={style}\n      />\n      <div\n        className={classes([\n          'dropin-progress-spinner-with-provider',\n          ...commonClasses,\n        ])}\n        aria-hidden={true}\n      />\n    </div>\n  ) : (\n    // if there are no children, it should be able to be standalone and have no background\n    <div\n      {...props}\n      className={classes([className, ...commonClasses])}\n      aria-live=\"polite\"\n      role=\"status\"\n      aria-label={handleAriaLabel()}\n    />\n  );\n};\n"],"names":["ProgressSpinner","ariaLabel","size","stroke","children","className","style","props","commonClasses","translations","useText","updating","updatingChildren","handleAriaLabel","_jsxs","classes","role","_jsx"],"mappings":"8RAkBO,MAAMA,EAA2DA,CAAC,CACvEC,UAAAA,EACAC,KAAAA,EAAO,QACPC,OAAAA,EAAS,IACTC,SAAAA,EACAC,UAAAA,EACAC,MAAAA,EACA,GAAGC,CACL,IAAM,CACEC,MAAAA,EAAgB,CACpB,0BACC,uCAAsCN,CAAK,GAC3C,yCAAwCC,CAAO,EAAC,EAG7CM,EAAeC,EAAQ,CAC3BC,SAAU,wCACVC,iBAAkB,+CAAA,CACnB,EAEKC,EAAkBA,IAClBZ,IACGG,EAAWK,EAAaG,iBAAmBH,EAAaE,UAG1DP,OAAAA,EAELU,EAAA,MAAA,CAAA,GACMP,EACJF,UAAWU,EAAQ,CAAC,kCAAkC,CAAC,EACvD,YAAU,SACVC,KAAK,SAAQZ,UAEba,EAAA,MAAA,CAAK,cAAa,GAAKb,SAAAA,CAAAA,CAAgB,EACvCa,EAAA,MAAA,CACE,aAAYJ,EAAgB,EAC5BG,KAAK,SACLX,UAAWU,EAAQ,CAAC,qCAAsCV,CAAS,CAAC,EACpEC,MAAAA,CAAAA,CACD,EACDW,EAAA,MAAA,CACEZ,UAAWU,EAAQ,CACjB,wCACA,GAAGP,CAAa,CACjB,EACD,cAAa,EAAA,CACd,CAAC,CAAA,CACC,EAGLS,EAAA,MAAA,CAAA,GACMV,EACJF,UAAWU,EAAQ,CAACV,EAAW,GAAGG,CAAa,CAAC,EAChD,YAAU,SACVQ,KAAK,SACL,aAAYH,EAAgB,CAAA,CAC7B,CAEL"}