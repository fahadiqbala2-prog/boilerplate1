{"version":3,"file":"ActionButtonGroup.js","sources":["../../src/components/ActionButtonGroup/ActionButtonGroup.tsx"],"sourcesContent":["import { FunctionComponent, VNode, cloneElement } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport '@adobe/elsie/components/ActionButtonGroup/ActionButtonGroup.css';\nimport { useCallback, useState } from 'preact/hooks';\nimport { Children } from 'react';\nimport { ActionButtonProps } from '@adobe/elsie/components/ActionButton';\n\nexport interface ActionButtonGroupOption {\n  value: string | null;\n  text: string;\n  icon?: VNode<SVGElement>;\n  disabled?: boolean;\n}\n\nexport interface ActionButtonGroupProps extends HTMLAttributes<HTMLDivElement> {\n  variant?: 'primary' | 'secondary';\n  activeOption?: string;\n  disabled?: boolean;\n  dividers?: boolean;\n  children: VNode<ActionButtonProps>[] | VNode<ActionButtonProps>;\n  handleSelect?(value: string): void;\n}\n\nexport const ActionButtonGroup: FunctionComponent<ActionButtonGroupProps> = ({\n  className,\n  variant = 'primary',\n  activeOption,\n  disabled = false,\n  dividers = true,\n  children,\n  handleSelect,\n  ...props\n}) => {\n  const [activeOptionState, setActiveOptionState] = useState(activeOption);\n\n  const handleClick = useCallback(\n    (option: any) => {\n      const isOptionDisabled = disabled || option.props.disabled;\n      if (!isOptionDisabled) {\n        setActiveOptionState(option.props.value);\n        if (handleSelect) {\n          handleSelect(option.props.value);\n        }\n      }\n    },\n    [handleSelect, setActiveOptionState, disabled]\n  );\n\n  const buttonGroupOptions = Children.map(\n    children,\n    (child: VNode<ActionButtonProps>) => {\n      const isOptionDisabled = disabled || child.props.disabled;\n      const isOptionActive = child.props.value === activeOptionState;\n      return cloneElement(child, {\n        disabled: isOptionDisabled,\n        active: isOptionActive,\n        onClick: () => handleClick(child),\n        className: classes([\n          'dropin-action-button-group__option',\n          `dropin-action-button-group__option--${variant}`,\n          ['dropin-action-button-group__option--active', isOptionActive],\n          ['dropin-action-button-group__option--with-dividers', dividers],\n        ]),\n      });\n    }\n  );\n\n  return (\n    <div\n      role=\"group\"\n      {...props}\n      className={classes([\n        'dropin-action-button-group',\n        `dropin-action-button-group--${variant}`,\n        className,\n      ])}\n    >\n      {buttonGroupOptions}\n    </div>\n  );\n};\n"],"names":["ActionButtonGroup","className","variant","activeOption","disabled","dividers","children","handleSelect","props","activeOptionState","setActiveOptionState","useState","handleClick","useCallback","option","value","buttonGroupOptions","Children","map","child","isOptionDisabled","isOptionActive","cloneElement","active","onClick","classes","_jsx","role"],"mappings":"sXAwBO,MAAMA,EAA+DA,CAAC,CAC3EC,UAAAA,EACAC,QAAAA,EAAU,UACVC,aAAAA,EACAC,SAAAA,EAAW,GACXC,SAAAA,EAAW,GACXC,SAAAA,EACAC,aAAAA,EACA,GAAGC,CACL,IAAM,CACJ,KAAM,CAACC,EAAmBC,CAAoB,EAAIC,EAASR,CAAY,EAEjES,EAAcC,EACjBC,GAAgB,CACUV,GAAYU,EAAON,MAAMJ,WAE3BU,EAAAA,EAAON,MAAMO,KAAK,EACnCR,GACWO,EAAAA,EAAON,MAAMO,KAAK,EAIrC,EAAA,CAACR,EAAcG,EAAsBN,CAAQ,CAC/C,EAEMY,EAAqBC,EAASC,IAClCZ,EACCa,GAAoC,CAC7BC,MAAAA,EAAmBhB,GAAYe,EAAMX,MAAMJ,SAC3CiB,EAAiBF,EAAMX,MAAMO,QAAUN,EAC7C,OAAOa,EAAaH,EAAO,CACzBf,SAAUgB,EACVG,OAAQF,EACRG,QAASA,IAAMZ,EAAYO,CAAK,EAChClB,UAAWwB,EAAQ,CACjB,qCACC,uCAAsCvB,CAAQ,GAC/C,CAAC,6CAA8CmB,CAAc,EAC7D,CAAC,oDAAqDhB,CAAQ,CAAC,CAChE,CAAA,CACF,CAAA,CAEL,EAEA,OACEqB,EAAA,MAAA,CACEC,KAAK,QAAO,GACRnB,EACJP,UAAWwB,EAAQ,CACjB,6BACC,+BAA8BvB,CAAQ,GACvCD,CAAS,CACV,EAAEK,SAEFU,CAAAA,CACE,CAET"}