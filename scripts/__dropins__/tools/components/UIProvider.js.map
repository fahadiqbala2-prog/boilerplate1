{"version":3,"file":"UIProvider.js","sources":["../../src/i18n/index.ts","../../src/components/UIProvider/UIProvider.tsx"],"sourcesContent":["import { deepmerge } from '@adobe/elsie/lib';\nimport en_US from '@adobe/elsie/i18n/en_US.json';\n\nexport type Lang = 'en_US';\n\nexport const definition = {\n  default: en_US,\n  en_US,\n};\n\n// https://github.com/synacor/preact-i18n\n// eslint-disable-next-line no-restricted-imports\nexport * from 'preact-i18n';\n\nexport const getDefinitionByLanguage = (lang: Lang) => {\n  return deepmerge(definition.default, definition[lang] || {});\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes, createContext, useMemo } from 'preact/compat';\nimport { classes, deepmerge } from '@adobe/elsie/lib';\nimport { IntlProvider, getDefinitionByLanguage, Lang } from '@adobe/elsie/i18n';\n\nimport '@adobe/elsie/components/UIProvider/UIProvider.css';\nimport '@adobe/elsie/components/UIProvider/normalize.css';\n\nexport const UIContext = createContext<{\n  locale: string;\n}>({\n  locale: 'en-US',\n});\n\ntype LangDefinitions = { [key: string]: any };\n\nexport interface UIProviderProps extends HTMLAttributes<HTMLDivElement> {\n  lang?: Lang; // ... list of other supported languages\n  langDefinitions?: LangDefinitions;\n}\n\nexport const UIProvider: FunctionComponent<UIProviderProps> = ({\n  lang = 'en_US',\n  langDefinitions = {},\n  className,\n  children,\n  ...props\n}) => {\n  const definitions = useMemo(() => {\n    // Merge default definition with selected definition\n    const selectedDefinitions: LangDefinitions = deepmerge(\n      langDefinitions.default,\n      langDefinitions[lang] ?? {}\n    );\n\n    // Merge SDK default definitions with custom definitions\n    return deepmerge(\n      getDefinitionByLanguage(lang), // SDK default definitions\n      selectedDefinitions // Custom definitions\n    );\n  }, [lang, langDefinitions]);\n\n  const locale = lang.replace('_', '-')\n  \n  return (\n    <UIContext.Provider value={{ locale }}>\n      <IntlProvider definition={definitions}>\n        <div {...props} className={classes(['dropin-design', className])}>\n          {children}\n        </div>\n      </IntlProvider>\n    </UIContext.Provider>\n  );\n};\n"],"names":["definition","default","en_US","getDefinitionByLanguage","lang","deepmerge","UIContext","createContext","locale","UIProvider","langDefinitions","className","children","props","definitions","useMemo","selectedDefinitions","replace","_jsx","Provider","value","IntlProvider","classes"],"mappings":"80DAKaA,EAAa,CACxBC,QAASC,EACTA,MAAAA,CACF,EAMaC,EAA2BC,GAC/BC,EAAUL,EAAWC,QAASD,EAAWI,CAAI,GAAK,CAAA,CAAE,ECPhDE,EAAYC,EAEtB,CACDC,OAAQ,OACV,CAAC,EASYC,EAAiDA,CAAC,CAC7DL,KAAAA,EAAO,QACPM,gBAAAA,EAAkB,CAAC,EACnBC,UAAAA,EACAC,SAAAA,EACA,GAAGC,CACL,IAAM,CACEC,MAAAA,EAAcC,EAAQ,IAAM,CAE1BC,MAAAA,EAAuCX,EAC3CK,EAAgBT,QAChBS,EAAgBN,CAAI,GAAK,CAAA,CAC3B,EAGOC,OAAAA,EACLF,EAAwBC,CAAI,EAC5BY,CAAAA,CACF,EACC,CAACZ,EAAMM,CAAe,CAAC,EAEpBF,EAASJ,EAAKa,QAAQ,IAAK,GAAG,EAGlCC,OAAAA,EAACZ,EAAUa,SAAQ,CAACC,MAAO,CAAEZ,OAAAA,CAAO,EAAEI,SACpCM,EAACG,EAAY,CAACrB,WAAYc,EAAYF,SACpCM,EAAA,MAAA,CAAA,GAASL,EAAOF,UAAWW,EAAQ,CAAC,gBAAiBX,CAAS,CAAC,EAAEC,SAAAA,CAAAA,CAE5D,CAAA,CACO,CAAA,CACI,CAExB"}