{"version":3,"file":"Image.js","sources":["../../src/lib/resolve-image.ts","../../src/components/Image/Image.tsx"],"sourcesContent":["import { getImageParamsKeyMap } from '@adobe/elsie/lib/';\n\nconst BREAKPOINTS = {\n  medium: 768,\n  large: 1024,\n  xlarge: 1366,\n  xxlarge: 1920,\n};\n\nexport interface ResolveImageUrlOptions {\n  width: number;\n  height?: number;\n  auto?: string;\n  quality?: number;\n  crop?: boolean;\n  fit?: string;\n}\n\nconst resolveImageUrl = (url: string, _opts?: ResolveImageUrlOptions) => {\n  const [base, query] = url.split('?');\n  const params = new URLSearchParams(query);\n\n  const keyMapping = getImageParamsKeyMap();\n\n  let opts = {};\n\n  if (keyMapping && Object.keys(keyMapping).length > 0 && _opts) {\n    opts = Object.entries(_opts).reduce((acc, [key, value]) => {\n      const newKey = keyMapping[key];\n      if (newKey) {\n        acc[newKey] = value;\n      }\n      return acc;\n    }, {} as { [key: string]: any });\n  } else {\n    opts = {\n      auto: 'webp',\n      quality: 80,\n      crop: false,\n      fit: 'cover',\n      ..._opts,\n    };\n  }\n  // Append image optimization parameters\n  Object.entries(opts).forEach(([key, value]) => {\n    if (value !== undefined && value !== null) {\n      params.set(key, String(value));\n    }\n  });\n\n  return `${base}?${params.toString()}`;\n};\n\nexport const generateSrcset = (\n  imageURL: string,\n  options: ResolveImageUrlOptions\n) => {\n  if (!imageURL || !options?.width) return;\n\n  const generateSrcsetUrl = (options: ResolveImageUrlOptions) => {\n    return resolveImageUrl(imageURL, {\n      ...options,\n    });\n  };\n\n  return Object.entries(BREAKPOINTS)\n    .map(([, value]) => {\n      // calculate breakpoints width\n      const relativeWidth = (options.width * value) / BREAKPOINTS.xxlarge;\n\n      return `${generateSrcsetUrl({\n        ...options,\n        width: relativeWidth,\n      })} ${value}w`;\n    })\n    .join(',\\n');\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes, useMemo, useState } from 'preact/compat';\nimport {\n  classes,\n  generateSrcset,\n  ResolveImageUrlOptions,\n} from '@adobe/elsie/lib';\nimport '@adobe/elsie/components/Image/Image.css';\n\nexport interface ImageProps extends HTMLAttributes<HTMLDivElement> {\n  params?: ResolveImageUrlOptions;\n  src: string;\n  onLoad?: (e: any) => void;\n}\nexport const Image: FunctionComponent<ImageProps> = ({\n  className,\n  src,\n  params,\n  loading = 'lazy',\n  srcSet,\n  onLoad,\n  ...props\n}) => {\n  const [loaded, setLoaded] = useState(false);\n\n  const _srcSet = useMemo(() => {\n    // If srcSet is provided, use it\n    if (srcSet) return srcSet;\n\n    // If src is not provided, return \"undefined\"\n    if (!src || !params) return;\n\n    // Otherwise, generate srcSet based on params\n    return generateSrcset(src, { ...params });\n  }, [params, src, srcSet]);\n\n  // Add class at image onLoad\n  const onLoadHandler = (e: any) => {\n    setLoaded(true);    \n    onLoad?.(e);\n  };\n\n  return (\n    <img\n      {...props}\n      className={classes([\n        'dropin-image',\n        ['dropin-image--loaded', loaded],\n        className,\n      ])}\n      loading={loading}\n      onLoad={onLoadHandler}\n      src={src}\n      srcSet={_srcSet}\n    />\n  );\n};\n"],"names":["BREAKPOINTS","medium","large","xlarge","xxlarge","resolveImageUrl","url","_opts","base","query","split","params","URLSearchParams","keyMapping","getImageParamsKeyMap","opts","Object","keys","length","entries","reduce","acc","key","value","newKey","auto","quality","crop","fit","forEach","set","String","toString","generateSrcset","imageURL","options","width","generateSrcsetUrl","map","relativeWidth","join","Image","className","src","loading","srcSet","onLoad","props","loaded","setLoaded","useState","_srcSet","useMemo","onLoadHandler","e","_jsx","classes"],"mappings":"yPAEA,MAAMA,EAAc,CAClBC,OAAQ,IACRC,MAAO,KACPC,OAAQ,KACRC,QAAS,IACX,EAWMC,EAAkBA,CAACC,EAAaC,IAAmC,CACvE,KAAM,CAACC,EAAMC,CAAK,EAAIH,EAAII,MAAM,GAAG,EAC7BC,EAAS,IAAIC,gBAAgBH,CAAK,EAElCI,EAAaC,IAEnB,IAAIC,EAAO,CAAA,EAEX,OAAIF,GAAcG,OAAOC,KAAKJ,CAAU,EAAEK,OAAS,GAAKX,EAC/CS,EAAAA,OAAOG,QAAQZ,CAAK,EAAEa,OAAO,CAACC,EAAK,CAACC,EAAKC,CAAK,IAAM,CACnDC,MAAAA,EAASX,EAAWS,CAAG,EAC7B,OAAIE,IACFH,EAAIG,CAAM,EAAID,GAETF,CACT,EAAG,CAA6B,CAAA,EAEzBN,EAAA,CACLU,KAAM,OACNC,QAAS,GACTC,KAAM,GACNC,IAAK,QACL,GAAGrB,CAAAA,EAIAY,OAAAA,QAAQJ,CAAI,EAAEc,QAAQ,CAAC,CAACP,EAAKC,CAAK,IAAM,CAClBA,GAAU,MACnCZ,EAAOmB,IAAIR,EAAKS,OAAOR,CAAK,CAAC,CAC/B,CACD,EAEO,GAAEf,CAAK,IAAGG,EAAOqB,SAAW,CAAA,EACtC,EAEaC,EAAiBA,CAC5BC,EACAC,IACG,CACC,GAAA,CAACD,GAAY,EAACC,GAAAA,MAAAA,EAASC,OAAO,OAE5BC,MAAAA,EAAqBF,GAClB9B,EAAgB6B,EAAU,CAC/B,GAAGC,CAAAA,CACJ,EAGInB,OAAAA,OAAOG,QAAQnB,CAAW,EAC9BsC,IAAI,CAAC,CAAGf,CAAAA,CAAK,IAAM,CAElB,MAAMgB,EAAiBJ,EAAQC,MAAQb,EAASvB,EAAYI,QAE5D,MAAQ,GAAEiC,EAAkB,CAC1B,GAAGF,EACHC,MAAOG,CACR,CAAA,CAAE,IAAGhB,CAAM,GAAA,CACb,EACAiB,KAAK;AAAA,CAAK,CACf,EC9DaC,EAAuCA,CAAC,CACnDC,UAAAA,EACAC,IAAAA,EACAhC,OAAAA,EACAiC,QAAAA,EAAU,OACVC,OAAAA,EACAC,OAAAA,EACA,GAAGC,CACL,IAAM,CACJ,KAAM,CAACC,EAAQC,CAAS,EAAIC,EAAS,EAAK,EAEpCC,EAAUC,EAAQ,IAAM,CAExBP,GAAAA,EAAeA,OAAAA,EAGf,GAAA,GAACF,GAAO,CAAChC,GAGb,OAAOsB,EAAeU,EAAK,CAAE,GAAGhC,CAAAA,CAAQ,CACvC,EAAA,CAACA,EAAQgC,EAAKE,CAAM,CAAC,EAGlBQ,EAAiBC,GAAW,CAChCL,EAAU,EAAI,EACdH,GAAAA,MAAAA,EAASQ,EAAC,EAGZ,OACEC,EAAA,MAAA,CAAA,GACMR,EACJL,UAAWc,EAAQ,CACjB,eACA,CAAC,uBAAwBR,CAAM,EAC/BN,CAAS,CACV,EACDE,QAAAA,EACAE,OAAQO,EACRV,IAAAA,EACAE,OAAQM,CAAAA,CACT,CAEL"}